<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technics | Bill's Blog]]></title>
  <link href="http://ibillxia.github.io/blog/categories/technics/atom.xml" rel="self"/>
  <link href="http://ibillxia.github.io/"/>
  <updated>2014-04-28T23:12:20+08:00</updated>
  <id>http://ibillxia.github.io/</id>
  <author>
    <name><![CDATA[Bill Xia]]></name>
    <email><![CDATA[ibillxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Koding——一个惊艳的在线编程开发平台]]></title>
    <link href="http://ibillxia.github.io/blog/2014/03/01/koding-an-amazing-online-development-environment/"/>
    <updated>2014-03-01T22:43:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2014/03/01/koding-an-amazing-online-development-environment</id>
    <content type="html"><![CDATA[<p>最近在v2ex上发现了一个非常酷的云编程发开平台——Koding，与大家分享一下，主要介绍一下它的基本功能和操作。</p>


<h2>What is Koding?</h2>


<p>Koding是一个在线的编程开发平台，致力于简化全球化的合作项目开发，并为每个人提供免费计算和开发资源。它已不仅仅是一个在线的编辑器那么简单，
而是通过提供免费的虚拟机（vm），上面安装了ubuntu操作系统，有真实的终端，允许开发者进行go、nodejs、ruby、python、php、js、C/C++等语言的开发，
可以安装各种工具和应用，。更主要的是，它是完全在线的，可以从世界上的任何地方访问，只需要一个浏览器。不仅如此，他还具有完美的社交功能，
可以和团队成员在线协作。</p>


<center><img src="/images/2014/IMAG2014030101.png"></center>


<!--more-->




<h2>Activity Feed</h2>


<p>在Koding的<a href="https://koding.com/Activity">Activity面板</a>，是用户间交流的媒介，在这里可以看到一系列的状态更新、代码片段或用户动态。在这里你可以
创建主题，参与某些主题的讨论，可以关注他人，基本的社交功能都一应俱全。</p>




<h2>Development on Koding</h2>


<p>这是Koding的主体部分。在这里你可以像在本地计算机进行开发一样，当然这个可以在线操作，可以实现云同步，随时随地都可以访问，有木有很高大上？
在这里你可以导入自己的GitHub项目，在浏览器中进行项目开发，可以向GitHub push你的项目更新。这里有在线终端，有在线文本编辑器，还有内置浏览器。
除了和在本地编程开发一样的功能以外，还可以自行配置和添加vm，设置自己的独立域名等。下面我们来看看vm的一些硬件参数，主要是cpu、内存、硬盘、网络等。</p>


<p>硬件信息概要，要加sudo使用根权限并输入密码，不加short参数可以查看详细信息
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ sudo lshw -short
</span><span class='line'>[sudo] password for ibillxia:&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>H/W path    Device   Class      Description&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>                 system     Computer
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>/0                   bus        Motherboard
</span><span class='line'>/0/0                 memory     15GiB System memory
</span><span class='line'>/0/1                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/2                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/3                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/4                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/5                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/6                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/7                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/8                 processor  Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>/0/100               bridge     440FX - 82441FX PMC [Natoma]
</span><span class='line'>/0/100/1             bridge     82371SB PIIX3 ISA [Natoma/Triton II]
</span><span class='line'>/0/100/1.1           storage    82371SB PIIX3 IDE [Natoma/Triton II]
</span><span class='line'>/0/100/1.2           bus        82371SB PIIX3 USB [Natoma/Triton II]
</span><span class='line'>/0/100/1.3           bridge     82371AB/EB/MB PIIX4 ACPI
</span><span class='line'>/0/100/2             display    GD 5446
</span><span class='line'>/0/100/3             network    Virtio network device
</span><span class='line'>/0/100/4             storage    Virtio block device
</span><span class='line'>/0/100/5             memory     RAM memory
</span><span class='line'>/1          eth0     network    Ethernet interface
</span><span class='line'>/2          gretap0  network    Ethernet interface</span></code></pre></td></tr></table></div></figure></notextile></div>
查看cpu信息，E5-2630 8核2.30GHz，本文只摘取第1个核的信息
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ cat /proc/cpuinfo
</span><span class='line'>processor       : 0
</span><span class='line'>vendor_id       : GenuineIntel
</span><span class='line'>cpu family      : 6
</span><span class='line'>model           : 45
</span><span class='line'>model name      : Intel(R) Xeon(R) CPU E5-2630 0 @ 2.30GHz
</span><span class='line'>stepping        : 7
</span><span class='line'>microcode       : 0x1
</span><span class='line'>cpu MHz         : 2299.998
</span><span class='line'>cache size      : 4096 KB
</span><span class='line'>physical id     : 0
</span><span class='line'>siblings        : 1
</span><span class='line'>core id         : 0
</span><span class='line'>cpu cores       : 1
</span><span class='line'>apicid          : 0
</span><span class='line'>initial apicid  : 0
</span><span class='line'>fpu             : yes
</span><span class='line'>fpu_exception   : yes
</span><span class='line'>cpuid level     : 13
</span><span class='line'>wp              : yes
</span><span class='line'>flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt aes xsave avx hyperv
</span><span class='line'>isor lahf_lm xsaveopt
</span><span class='line'>bogomips        : 4599.99
</span><span class='line'>clflush size    : 64
</span><span class='line'>cache_alignment : 64
</span><span class='line'>address sizes   : 40 bits physical, 48 bits virtual
</span><span class='line'>power management:</span></code></pre></td></tr></table></div></figure></notextile></div>
查看内存信息，共16GB内存
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ cat /proc/meminfo                                                                                                                                                                                                                           &lt;br/>
</span><span class='line'>MemTotal:       16433708 kB
</span><span class='line'>MemFree:         8506472 kB
</span><span class='line'>Buffers:          332884 kB
</span><span class='line'>Cached:          5334908 kB
</span><span class='line'>SwapCached:            0 kB
</span><span class='line'>Active:          3936496 kB
</span><span class='line'>Inactive:        2222980 kB
</span><span class='line'>Active(anon):    2093920 kB
</span><span class='line'>Inactive(anon):    10856 kB
</span><span class='line'>Active(file):    1842576 kB
</span><span class='line'>Inactive(file):  2212124 kB
</span><span class='line'>Unevictable:        5552 kB
</span><span class='line'>Mlocked:            5552 kB
</span><span class='line'>SwapTotal:             0 kB
</span><span class='line'>SwapFree:              0 kB
</span><span class='line'>Dirty:                 0 kB
</span><span class='line'>Writeback:             8 kB
</span><span class='line'>AnonPages:        482832 kB
</span><span class='line'>Mapped:            41668 kB
</span><span class='line'>Shmem:           1623556 kB
</span><span class='line'>Slab:            1522048 kB
</span><span class='line'>SReclaimable:    1225180 kB
</span><span class='line'>SUnreclaim:       296868 kB
</span><span class='line'>KernelStack:        6312 kB
</span><span class='line'>PageTables:        84660 kB
</span><span class='line'>NFS_Unstable:          0 kB
</span><span class='line'>Bounce:                0 kB
</span><span class='line'>WritebackTmp:          0 kB
</span><span class='line'>CommitLimit:     8216852 kB
</span><span class='line'>Committed_AS:    5225664 kB
</span><span class='line'>VmallocTotal:   34359738367 kB
</span><span class='line'>VmallocUsed:       45688 kB
</span><span class='line'>VmallocChunk:   34359561000 kB
</span><span class='line'>HardwareCorrupted:     0 kB
</span><span class='line'>AnonHugePages:     18432 kB
</span><span class='line'>HugePages_Total:       0
</span><span class='line'>HugePages_Free:        0
</span><span class='line'>HugePages_Rsvd:        0
</span><span class='line'>HugePages_Surp:        0
</span><span class='line'>Hugepagesize:       2048 kB
</span><span class='line'>DirectMap4k:      245748 kB
</span><span class='line'>DirectMap2M:     7094272 kB
</span><span class='line'>DirectMap1G:     9437184 kB</span></code></pre></td></tr></table></div></figure></notextile></div>
硬盘测速，才219kB/s，不是一般的慢啊
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ dd if=/dev/zero of=test bs=64k count=2k oflag=dsync
</span><span class='line'>2048+0 records in
</span><span class='line'>2048+0 records out
</span><span class='line'>134217728 bytes (134 MB) copied, 612.942 s, 219 kB/s</span></code></pre></td></tr></table></div></figure></notextile></div>
网速测试，一般般
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ ping www.github.com  # 测试1
</span><span class='line'>PING github.com (192.30.252.129) 56(84) bytes of data.
</span><span class='line'>64 bytes from ip1b-lb3-prd.iad.github.com (192.30.252.129): icmp_req=1 ttl=54 time=73.2 ms
</span><span class='line'>64 bytes from ip1b-lb3-prd.iad.github.com (192.30.252.129): icmp_req=2 ttl=54 time=75.9 ms
</span><span class='line'>64 bytes from ip1b-lb3-prd.iad.github.com (192.30.252.129): icmp_req=3 ttl=54 time=72.4 ms
</span><span class='line'>64 bytes from ip1b-lb3-prd.iad.github.com (192.30.252.129): icmp_req=4 ttl=54 time=72.3 ms
</span><span class='line'>64 bytes from ip1b-lb3-prd.iad.github.com (192.30.252.129): icmp_req=5 ttl=54 time=66.2 ms
</span><span class='line'>64 bytes from ip1b-lb3-prd.iad.github.com (192.30.252.129): icmp_req=6 ttl=54 time=66.1 ms
</span><span class='line'>^C
</span><span class='line'>--- github.com ping statistics ---
</span><span class='line'>6 packets transmitted, 6 received, 0% packet loss, time 5001ms
</span><span class='line'>rtt min/avg/max/mdev = 66.117/71.077/75.947/3.656 ms
</span><span class='line'>ibillxia@vm-0:~$ ping www.stackoverflow.com    # 测试2
</span><span class='line'>PING stackoverflow.com (198.252.206.140) 56(84) bytes of data.
</span><span class='line'>64 bytes from stackoverflow.com (198.252.206.140): icmp_req=1 ttl=49 time=76.1 ms
</span><span class='line'>64 bytes from stackoverflow.com (198.252.206.140): icmp_req=2 ttl=49 time=88.4 ms
</span><span class='line'>64 bytes from stackoverflow.com (198.252.206.140): icmp_req=3 ttl=49 time=75.1 ms
</span><span class='line'>64 bytes from stackoverflow.com (198.252.206.140): icmp_req=4 ttl=49 time=75.1 ms
</span><span class='line'>64 bytes from stackoverflow.com (198.252.206.140): icmp_req=5 ttl=49 time=75.3 ms
</span><span class='line'>64 bytes from stackoverflow.com (198.252.206.140): icmp_req=6 ttl=49 time=82.6 ms
</span><span class='line'>^C
</span><span class='line'>--- stackoverflow.com ping statistics ---
</span><span class='line'>6 packets transmitted, 6 received, 0% packet loss, time 5005ms
</span><span class='line'>rtt min/avg/max/mdev = 75.130/78.813/88.437/5.061 ms
</span><span class='line'>ibillxia@vm-0:~$ ping www.facebook.com     # 测试3
</span><span class='line'>PING star.c10r.facebook.com (31.13.77.81) 56(84) bytes of data.
</span><span class='line'>64 bytes from edge-star-shv-06-sjc1.facebook.com (31.13.77.81): icmp_req=1 ttl=81 time=153 ms
</span><span class='line'>64 bytes from edge-star-shv-06-sjc1.facebook.com (31.13.77.81): icmp_req=2 ttl=81 time=153 ms
</span><span class='line'>64 bytes from edge-star-shv-06-sjc1.facebook.com (31.13.77.81): icmp_req=3 ttl=81 time=153 ms
</span><span class='line'>64 bytes from edge-star-shv-06-sjc1.facebook.com (31.13.77.81): icmp_req=4 ttl=81 time=153 ms
</span><span class='line'>64 bytes from edge-star-shv-06-sjc1.facebook.com (31.13.77.81): icmp_req=5 ttl=81 time=153 ms
</span><span class='line'>^C
</span><span class='line'>--- star.c10r.facebook.com ping statistics ---
</span><span class='line'>6 packets transmitted, 5 received, 16% packet loss, time 5006ms
</span><span class='line'>rtt min/avg/max/mdev = 153.577/153.740/153.951/0.449 ms</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>再来看看一些系统和软件信息。</p>


<p>查看linux内核版本、系统体系结构及预安装软件版本
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ uname -a
</span><span class='line'>Linux vm-0.ibillxia.koding.kd.io 3.13.0-5-generic #20 SMP Mon Jan 20 19:56:12 PST 2014 x86_64 x86_64 x86_64 GNU/Linux
</span><span class='line'>ibillxia@vm-0:~$ git --version
</span><span class='line'>git version 1.8.1.2
</span><span class='line'>ibillxia@vm-0:~$ mysql --version
</span><span class='line'>mysql  Ver 14.14 Distrib 5.5.32, for debian-linux-gnu (x86_64) using readline 6.2
</span><span class='line'>ibillxia@vm-0:~$ apache2 -v
</span><span class='line'>Server version: Apache/2.2.22 (Ubuntu)
</span><span class='line'>Server built:   Jul 12 2013 13:18:14</span></code></pre></td></tr></table></div></figure></notextile></div>
常用编程语言版本
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ibillxia@vm-0:~$ gcc --version
</span><span class='line'>gcc (Ubuntu/Linaro 4.7.3-1ubuntu1) 4.7.3
</span><span class='line'>Copyright (C) 2012 Free Software Foundation, Inc.
</span><span class='line'>This is free software; see the source for copying conditions.  There is NO
</span><span class='line'>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>ibillxia@vm-0:~$ g++ --version
</span><span class='line'>g++ (Ubuntu/Linaro 4.7.3-1ubuntu1) 4.7.3
</span><span class='line'>Copyright (C) 2012 Free Software Foundation, Inc.
</span><span class='line'>This is free software; see the source for copying conditions.  There is NO
</span><span class='line'>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>ibillxia@vm-0:~$ java -version
</span><span class='line'>java version "1.7.0_25"
</span><span class='line'>OpenJDK Runtime Environment (IcedTea 2.3.10) (7u25-2.3.10-1ubuntu0.13.04.2)
</span><span class='line'>OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)
</span><span class='line'>ibillxia@vm-0:~$ go version&lt;br/>
</span><span class='line'>go version go1.1.1 linux/amd64
</span><span class='line'>ibillxia@vm-0:~$ ruby --version
</span><span class='line'>ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux]
</span><span class='line'>ibillxia@vm-0:~$ php --version
</span><span class='line'>PHP 5.4.9-4ubuntu2.3 (cli) (built: Sep  4 2013 19:32:25)
</span><span class='line'>Copyright (c) 1997-2012 The PHP Group
</span><span class='line'>Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies
</span><span class='line'>ibillxia@vm-0:~$ python --version                                                                                                                                                                                                                                   &lt;br/>
</span><span class='line'>Python 2.7.4
</span><span class='line'>ibillxia@vm-0:~$ perl --version&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>This is perl 5, version 14, subversion 2 (v5.14.2) built for x86_64-linux-gnu-thread-multi
</span><span class='line'>(with 80 registered patches, see perl -V for more detail)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Copyright 1987-2011, Larry Wall&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Perl may be copied only under the terms of either the Artistic License or the
</span><span class='line'>GNU General Public License, which may be found in the Perl 5 source kit.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Complete documentation for Perl, including FAQ lists, should be found on
</span><span class='line'>this system using "man perl" or "perldoc perl".  If you have access to the
</span><span class='line'>Internet, point your browser at http://www.perl.org/, the Perl Home Page.</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Installing and Using KDApps</h2>


<p>除了系统已安装的基本应用外，用户还可以在<a href="https://koding.com/Apps">Koding/Apps</a>上选择一些官方的apps安装到自己的vm上。可以
在线绘图、编辑照片等等。</p>




<h2>Online Teamwork</h2>


<p>Koding还具有团退协作功能，你可以创建自己的group或参加到别人的group中。加入到一个team后，系统会分配你一个Session ID，通过这个ID你可以进入
到队友的vm当中，然后你们相互之间都可以看到对方的编码动态。</p>




<p>关于Koding的更多内容，请戳<a href="http://learn.koding.com/getting-started/">Learn Koding</a>。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[互联网引发的制造业革命——读《创客》]]></title>
    <link href="http://ibillxia.github.io/blog/2014/02/23/makers-the-new-industrial-evolution/"/>
    <updated>2014-02-23T22:07:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2014/02/23/makers-the-new-industrial-evolution</id>
    <content type="html"><![CDATA[<p>其实很早之前就买了这本书，是在13年6月份和『看见』、『黑客与画家』等一起买的吧，看完这两本书后也就开始看『创客』了，
但都是断断续续的看，没有花比较集中的时间，而且感觉前面几章将的内容没有那么大的吸引力。后来双11做活动，又买了10来本书，
其中有雷军、周鸿祎等IT大佬的传记，还有几本成功励志类、文学类的书，就又跳着去看这些书了。开学初闲着无聊就又拿起这本书
来看了，看到了第二部分后，才发现原来这本书是如此之好，特别是开源硬件、众筹、云工厂等新兴工业和商业模式，让人印象深刻。</p>




<h2>作者&内容简介</h2>


<p>这本书的作者是克里斯•安德森，一个很多人耳熟能详的名字。现任『连线』杂志主编，是3D Robotics和DIY Drones的联合创始人，
也是『纽约时报』畅销书『长尾理论』及『免费：商业的未来』的作者。</p>


<center><img src="/images/2014/IMAG2014022301.jpg"></center>


<p>『创客：新工业革命』一书以独特的视角分析了传统的制造业在汹涌澎湃的互联网浪潮中发生的翻天覆地的变化。在互联网这个广阔媒介的
笼罩下，每个人都可以分享自己的idea、设计方案和产品原型，也可以评论和完善他人的idea、方案和产品，每个人都可以DIY，都可以自己动手
创造出新的东西。只要你敢想敢做，nothing is impossible！在长尾效应无法避免的情况下，每个人都可以设计个性化的产品，解决个性化的
问题，新发明不断涌现。3D打印的兴起，使得新产品的制造更加模块化，更加便捷。硬件设计的开源，又加剧了产品的分化和个性化，也使得其
更新换代和性能提升更快。云工厂又使得发明者可以不用白手起家建立加工厂，从而更加便捷的将自己的设计付诸实践。而众筹这种新的集资模式
又解决了发明者自尽缺乏的后顾之忧，而且提前为之提供了市场需求情况。所有的这些因素，使得制造业空前的繁荣，一场新的工业革命正在萌发。</p>


<!--more-->




<h2>长尾效应&DIY&发明革命</h2>


<p>长尾（The Long Tail），或译长尾效应，最初由克里斯·安德森（Chris Anderson）于2004年发表于自家的<a href="http://www.wired.com/wired/archive/12.10/tail.html">杂志</a>，
用来描述诸如亚马逊公司、Netflix和Real.com/Rhapsody之类的网站之商业和经济模式。是指那些不受到重视的、销量小但种类多的产品或服务
由于总量巨大，累积起来的总收益超过主流产品的现象。下图中纵轴为“人气”，横轴为“产品”，黄色部分即为长尾。
<center><img src="/images/2014/IMAG2014022302.png"></center>
在互联网领域，长尾效应尤为显著。比如亚马逊上的书籍的销售情况，<a href="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=400940">Erik</a>等
用指数曲线研究了亚马逊网站的书本销售量和销售排名的关系，并发现亚马逊40%的书本销售来自于**本地书店里不卖**的书本。在亚马逊这个案例上，
可应用“长尾”概念解释：它一半左右的销售来自于比较热门的商品，而另一半却来自相对不那么热门的商品。这跟传统
的“<a href="http://zh.wikipedia.org/wiki/%E4%BA%8C%E5%85%AB%E5%AE%9A%E5%BE%8B">二八定律</a>”完全相反。这使得我们可以逆向的思考，不再紧盯着
那20%的大众化产品，而去关注后80%的“长尾巴”，同样也可以很有前途。</p>


<p>在小众产品市场中，DIY（即do it yourself）可谓独树一帜，占据着举足轻重的地位。在这个充满个性化的时代里，个性就是时尚，独一无二
永远是时尚一族的追求。虽然DIY已经有半个多世纪的历史，但在如今的互联网环境下，DIY更是发挥到了极致：DIY电脑、音箱、手机，DIY网站、个人博客，
DIY首饰、工艺品，DIY家具、房屋，DIY台历、杯子、布偶、玩具。。。可以自己设计个性化的服装图案，可以自己组装各种硬件设备。书中作者
的外公DIY了自家的garden的灌溉系统，使之自动化甚至可以远程遥控，并将系统申请了专利。书中还有对玩具DIY、对乐高机器人DIY的例子。</p>


<p>互联网的存在，使得DIY的产品无论从数量还是质量上，都产生了很大的飞跃，很多新的设计方法和实现方式都具有申请专利或发明的资质，
每个人都可以成为名副其实的发明家，只要你敢于发现、敢于创造。互联网的资源与idea分享的开放环境，使得发明创造的空间急剧膨胀，而时间逐渐
缩短，各种新技术不断涌现，创业的浪潮居高不下，创业和发明甚至已成为一种时尚。</p>




<h2>3D打印&开源软硬件</h2>


<p>最近两年3D打印还挺火的，只需要向3D打印机输入三维的设计模型，即可打印出一个三维的产品。随着技术的更新、新材料的研制，3D打印机能够
制作的东西越来越多、越来越复杂，各种小型的装饰品、日用品、玩具模型等，都是小case，在不远的未来连汽车都可以打印了，多么神奇！3D打印的
兴起，使得产品的设计者们只需要使用CAD软件，对产品进行三维建模，然后将数字化的模型输入到打印机，即可得到成型的产品，不用另外话时间去
组装。对产品进行改进，只需要在CAD软件中对模型设计进行修改和优化，产品的生产周期大大压缩。</p>


<p>在书中，作者将开源硬件单独设立了一张，篇幅还不小。现如今，硬件电路都可以用计算机代码（如硬件描述语言VHDL等）和图文来描述和设计，
硬件的设计方案都数字化、信息化了，开源出它的设计方案在互联网上，人们可以随意对其进行添加新模块或删改或组合，形成新的硬件，实现新的
应用场景。书中提到的比较典型的开源硬件要数Arduino了，这是包含很多常见功能模块的硬件开发板，有很多可自选的组件（甚至可以和智能手机互联），
可以编程，从而可以实现各种很酷的功能，比如爬行机器人、小飞行器、智能垃圾桶、音乐魔方等等，比如Arduino中文社区中展示的一个非常酷的
<a href="http://www.arduino.cn/article-3-1.html">万向轴语音机器人</a>。</p>




<h2>云工厂&众筹</h2>


<p>也许我们要DIY的产品还无法用3D打印机来制造，也许我们要hack的东西也不是通过现成的开源软硬件就能实现，现在我们不用担心这些了，因为
现在的互联网可谓无所不能，我们可以通过云工厂来为我们生产定制的产品。互联网的存在，使得我们不用亲临工厂，在网络上就可以寻找合适的代
工厂，无论它在国内还是海外。网上开店开工厂，早已不是什么新鲜事了。早在90年代末，互联网才刚刚兴起的时候，本书的作者就认识了当今中国
网上商城的大佬——马云，当时马云就开始将各种公司信息搬到网上。而现如今，很多网上商城不仅可以提供现成的产品，而且可以接受私人定制的产
品。</p>


<p>也许我们没有资金来购买昂贵原材料，也许我们没有能力去做产品的市场调查，因为现在我们有了众筹这种新的互联网集资模式。众筹的思路是，
发明者在网络上发布自己的产品方案和原型，寻求需要该产品的网友的支持，无论是对你进行资金支持，还是对你进行精神鼓励。有需求者还可以提前
以优惠的价格预定，提前支付。现在网上这样的众筹平台已经有很多了，作者在书中提到了Kickstarter等，国内有点名时间(demotime)等等，上面有
很多很有意思的项目，大家可以去看看。在众筹平台上，创意的发布者需要提供产品的方案及可行性，需要筹集的资金量，以及筹集周期，然后让网友
来投票，提供意见，预定产品。如果在筹集结束前能够达到预定的金额，那么就可以顺利进入实质生产阶段了。人们不用再去寻找非常困难而且风险
很大的贷款或风险投资。</p>


<p>有了云工厂和众筹这些完美的平台，创意的实现可谓零门槛，所有你需要做的就是展开思维的翅膀，在生活中去发现、去创造。</p>




<h2>未来</h2>


<p>互联网的普及，新技术、新思维的不断涌现，互联网正在对传统制造业产生巨大的冲击，特别是处于80%的长尾部分的传统制造业。“创客运动”的
天平偏向于最佳创新模式，而非最廉价的劳动力，人才与创新对企业的发展越来越重要，制造业正在发生深刻的变革，未来充满着机遇和挑战！Are you READY？！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013IDF声龙语音识别技术演示]]></title>
    <link href="http://ibillxia.github.io/blog/2013/04/10/Intel-Developer-Forum-2013-Nuance-Dragon-Presentation/"/>
    <updated>2013-04-10T12:57:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2013/04/10/Intel-Developer-Forum-2013-Nuance-Dragon-Presentation</id>
    <content type="html"><![CDATA[<p>2013英特尔信息技术峰会(Intel Developer Forum, IDF)上，来自Nuance的声龙语音合成和识别技术的演示，中文语音识别不给力，
笑点频出啊，哈哈</p>




<p><iframe height=560 width=780 src="http://player.youku.com/embed/XNTQwNjQ0MjUy" frameborder=0 allowfullscreen></iframe></p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EFI和操作系统]]></title>
    <link href="http://ibillxia.github.io/blog/2012/09/23/EFI-and-operating-system/"/>
    <updated>2012-09-23T23:03:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2012/09/23/EFI-and-operating-system</id>
    <content type="html"><![CDATA[<p>前两天在98上看到一个帖子 windows 8 没法和linux共存？ 里面有一个概念就是EFI</p>

<h2>什么是EFI？</h2>


<p>EFI英文全称为Extensible Firmware Interface，中文译为可扩展固件接口，其主要目的是为了提供一组在 OS 加载之前（启动前）在
所有平台上一致的、正确指定的启动服务。EFI最初由Intel开发，并在2002年12月所发布1.1版，后来在2005年Intel将此规范交由UEFI论坛
来推广与发展，并更名为Unified EFI(UEFI)。</p>




<p>EFI是一种个人电脑系统规格，用来定义操作系统与系统固件之间的软件界面，为替代BIOS的升级方案。可扩展固件接口（EFI）负责
加电自检（POST）、连系操作系统以及提供连接操作系统与硬件的接口。UEFI在EFI基础上增加与改进了加密编码（cryptography）、
网络认证（network authentication）与用户界面架构（User Interface Architecture）等方面的内容。EFI在软件层次中的位置如下图</br>
<img src="/images/2012/IMAG2012092301.png">
</p>




<!-- more -->


<h2>为什么有EFI？</h2>


<p>EFI技术源于英特尔安腾处理器（Itanium）平台的推出。安腾处理器是英特尔瞄准服务器高端市场投入近十年研发力量设计产生的
与x86系列完全不同的64位新架构。在x86系列处理器进入32位的时代，由于兼容性的原因，新的处理器(80386)保留了16位的运行方式(实模式)，
此后多次处理器的升级换代都保留了这种运行方式。甚至在含64位扩展技术的至强系列处理器中，处理器加电启动时仍然会切换到16位的
实模式下运行。英特尔将这种情况归咎于BIOS技术的发展缓慢。</p>




<p>为什么这么说呢？因为自从PC兼容机厂商通过净室的方式复制出第一套BIOS源程序，BIOS就以16位汇编代码，寄存器参数调用方式，
静态链接，以及1MB以下内存固定编址的形式存在了十几年。虽然由于各大BIOS厂商近年来的努力，有许多新元素添加到产品中，
如PnP BIOS，ACPI，传统USB设备支持等等，但BIOS的根本性质没有得到任何改变。这迫使英特尔在开发新的处理器时，都必须考虑加进
使性能大大降低的兼容模式。有人曾打了一个比喻：这就像保时捷新一代的全自排跑车，被人套上去一个蹩脚打档器。正是在这种背景下，
Intel发展了EFI技术。</p>




<h2>EFI与操作系统又有什么关系呢？</h2>


<p>上文提到EFI是BIOS的升级版，那么EFI与OS的关系是不是也和BIOS与OS的关系一样呢？</br>
要回答这个问题，我们首先得将EFI与BIOS进行一个详细的比较：</br>
（1）EFI运行于32位或64位模式，突破传统的BIOS的16位实模式，达到处理器的最大寻址；</br>
（2）EFI利用加载驱动的形式，识别及操作硬件，不同于BIOS利用挂载真实模式中断的方式增加硬件功能；</br>
（3）EFI大部分（99%）是用模块化的C语言编写的，较BIOS而言更易于实现，容错和纠错特性更强，更易于扩展；</br>
（4）EFI系统下的驱动并不是由可以直接运行在CPU上的代码组成的，而是用EFI Byte Code编写而成的（有点像Java
的Byte Code），这是一组专用于EFI驱动的虚拟机器语言，必须在EFI驱动运行环境（Driver Execution Environment，或DXE）
下被解释运行，这就保证了充分的向下兼容性；</br>
（5）UEFI内置图形驱动功能，可以提供一个高分辨率的彩色图形环境，用户进入后能用鼠标点击调整配置，一切就像操作Windows
系统下的应用软件一样简单。BIOS将不再是高手才能玩转的工具，光这一点就足以让很多菜鸟朋友心仪不已了。</br>
（6）强大的可扩展性是UEFI的另一大优点。我们都知道，当电脑出现故障导致无法进入操作系统时，我们往往要借助其他工具才能
解决问题，BIOS在诊断系统故障方面的作用实是在太小了。不过，UEFI将不会重蹈BIOS功能单一的覆辙！UEFI使用模块化设计，它在
逻辑上分为硬件控制与OS（操作系统）软件管理两部分，硬件控制为所有UEFI版本所共有，而OS软件管理其实是一个可编程的开放接口。
借助这个接口，主板厂商可以实现各种丰富的功能。比如我们熟悉的各种备份及诊断功能可通过UEFI加以实现，主板或固件厂商可以
将它们作为自身产品的一大卖点。如果你更习惯让别人来维护机器，UEFI也可提供强大的联网功能，其他用户可以对你的主机进行
可靠的远程故障诊断，而这一切并不需要进入操作系统！
</p>




<p>由以上比较可知，EFI在开机时的作用和BIOS一样，就是初始化PC，但在细节上却有很多不一样。BIOS对PC的初始化，只是按照
一定的顺序对硬件通电，简单地检查硬件是否能工作，而EFI不但检查硬件的完好性，还会加载硬件在EFI中的驱动程序，不用操作
系统负责驱动的加载工作。 对于很多非专业人士而言，EFI的最革命之处，就在于颠 覆了BIOS的界面概念，让操作界面和Windows
一样易于上手。在EFI的操作界面中，鼠标成为了替代键盘的输入工具，各功能调节的模块也做的和Windows程序一样，可以说，EFI
就是一个小型化的Windows系统。</p>




<p>说EFI是一个小型化的Windows系统，毫不夸张。EFI在概念上非常类似于一个低阶的操作系统，并且具有操控所有硬件资源的能力。
不少人感觉它的不断发展将有可能代替现代的操作系统。事实上，EFI的缔造者们在第一版规范出台时就将EFI的能力限制于不足以
威胁操作系统的统治地位。首先，它只是硬件和预启动软件间的接口规范；其次，EFI环境下不提供中断的机制，也就是说每个EFI
驱动程序必须用轮询(polling)的方式来检查硬件状态，并且需要以解释的方式运行，较操作系统下的机械码驱动效率更低；再则，
EFI系统不提供复杂的缓存器保护功能，它只具备简单的缓存器管理机制，具体来说就是指运行在x86处理器的段保护模式下，以最大
寻址能力为限把缓存器分为一个平坦的段(Segment)，所有的程序都有权限访问任何一段位置，并不提供真实的保护服务。当EFI所有
组件加载完毕时，系统可以开启一个类似于操作系统Shell的命令解释环境，在这里，用户可以调入执行任何EFI应用程序，这些程序
可以是硬件检测及除错软件，引导管理，设置软件，操作系统引导软件等等。理论上来说，对于EFI应用程序的功能并没有任何限制，
任何人都可以编写这类软件，并且效果较以前MS-DOS下的软件更华丽，功能更强大。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[伪造IP地址的原理]]></title>
    <link href="http://ibillxia.github.io/blog/2010/08/31/the-elements-of-ip-faking/"/>
    <updated>2010-08-31T09:41:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2010/08/31/the-elements-of-ip-faking</id>
    <content type="html"><![CDATA[<p>入侵者使用假IP地址发送包，利用基于IP地址证实的应用程序。其结果是未授权的远端用户进入带有防火墙的主机系统。</p>




<p>假设有两台主机A、B和入侵者控制的主机X。假设B授予A某些特权，使得A能够获得B所执行的一些操作。X的目标就是得到与B相同的权利。
为了实现该目标，X必须执行两步操作：首先，与B建立一个虚假连接；然后，阻止A向B报告网络证实系统的问题。主机X必须假造A的IP地址，
从而使B相信从X发来的包的确是从A发来的。</p>




<p>我们同时假设主机A和B之间的通信遵守TCP／IP的三次握手机制。握手方法是：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>A->：SYN（序列号=M）
</span><span class='line'>B->A：SYN（序列号＝N），ACK（应答序号=M+1）
</span><span class='line'>A->B：ACK（应答序号＝N+1）</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->


<p>主机X伪造IP地址步骤如下：首先，X冒充A，向主机B发送一个带有随机序列号的SYN包。主机B响应，向主机A发送一个带有应答号的SYN+ACK包、
该应答号等于原序列号加1。同时，主机B产生自己发送包序列号，并将其与应答号一起发送。为了完成三次握手，主机X需要向主</p>




<p>机B回送一个应答包，其应答号等于主机B向主机A发送的包序列号加1。假设主机X与A和B不同在一个子网内，则不能检测到B的包，
主机X只有算出B的序列号，才能创建TCP连接。其过程描述如下：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>X->B：SYN（序列号=M），SRC=A
</span><span class='line'>B->A：SYN（序列号=N），ACK（应答号=M+1）
</span><span class='line'>X->B：ACK（应答号＝N+1），SRC＝A</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>同时，主机X应该阻止主机A响应主机B的包。为此，X可以等到主机A因某种原因终止运行，或者阻塞主机A的操作系统协议部分，使它不能响应主机B。
一旦主机X完成了以上操作，它就可以向主机B发送命令。主机B将执行这些命令，认为他们是由合法主机A发来的。</p>

]]></content>
  </entry>
  
</feed>
