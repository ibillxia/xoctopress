<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Email | Bill's Blog]]></title>
  <link href="http://ibillxia.github.io/blog/tags/email/atom.xml" rel="self"/>
  <link href="http://ibillxia.github.io/"/>
  <updated>2014-01-03T23:45:33+08:00</updated>
  <id>http://ibillxia.github.io/</id>
  <author>
    <name><![CDATA[Bill Xia]]></name>
    <email><![CDATA[ibillxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP发送邮件]]></title>
    <link href="http://ibillxia.github.io/blog/2010/07/21/php-send-email/"/>
    <updated>2010-07-21T10:05:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2010/07/21/php-send-email</id>
    <content type="html"><![CDATA[<p>现在很多主机空间都是IIS上执行PHP程序，大多不能直接用mail()发送邮件，有了这个类只要你有注册过邮箱，
就可以随意的发送邮件，速度也不慢哦。</p>




<p>先给一个具体的使用示例：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?
</span><span class='line'>require (FILE_DIR."smtp.php");
</span><span class='line'>$smtpserver = "smtp.xxx.com";//SMTP服务器
</span><span class='line'>$smtpserverport =25;//SMTP服务器端口
</span><span class='line'>$smtpusermail = "xxxxx@xxx.com";//SMTP服务器的用户邮箱
</span><span class='line'>$smtpemailto = "aaaaa@xxx.com";//发送给谁
</span><span class='line'>$smtpuser = "xxxxx";//SMTP服务器的用户帐号
</span><span class='line'>$smtppass = "xxxxx";//SMTP服务器的用户密码
</span><span class='line'>$mailsubject = "Test Subject";//邮件主题
</span><span class='line'>$mailbody = "&lt;h1>This is a test mail&lt;/h1>";//邮件内容
</span><span class='line'>$mailtype = "HTML";//邮件格式（HTML/TXT）,TXT为文本邮件
</span><span class='line'>$smtp = new smtp($smtpserver,$smtpserverport,true,$smtpuser,$smtppass);//这里面的一个true是表示使用身份验证,否则不使用身份验证.
</span><span class='line'>$smtp->debug = TRUE;//是否显示发送的调试信息
</span><span class='line'>$smtp->sendmail($smtpemailto, $smtpusermail, $mailsubject, $mailbody, $mailtype);
</span><span class='line'>?></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->




<p>下面是一个基于SMTP协议的邮件发送类：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>class smtp {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>/* Public Variables */ 
</span><span class='line'>var $smtp_port; 
</span><span class='line'>var $time_out; 
</span><span class='line'>var $host_name; 
</span><span class='line'>var $log_file; 
</span><span class='line'>var $relay_host; 
</span><span class='line'>var $debug; 
</span><span class='line'>var $auth; 
</span><span class='line'>var $user; 
</span><span class='line'>var $pass; 
</span><span class='line'>
</span><span class='line'>/* Private Variables */ 
</span><span class='line'>var $sock; 
</span><span class='line'>
</span><span class='line'>/* Constractor */ 
</span><span class='line'>function smtp($relay_host = "", $smtp_port = 25,$auth = false,$user,$pass) { 
</span><span class='line'>    $this-&gt;debug = FALSE; 
</span><span class='line'>    $this-&gt;smtp_port = $smtp_port; 
</span><span class='line'>    $this-&gt;relay_host = $relay_host; 
</span><span class='line'>    $this-&gt;time_out = 30; //is used in fsockopen() 
</span><span class='line'>
</span><span class='line'>    $this-&gt;auth = $auth;//auth 
</span><span class='line'>    $this-&gt;user = $user; 
</span><span class='line'>    $this-&gt;pass = $pass; 
</span><span class='line'>    # 
</span><span class='line'>    $this-&gt;host_name = "localhost"; //is used in HELO command 
</span><span class='line'>    $this-&gt;log_file = ""; 
</span><span class='line'>    $this-&gt;sock = FALSE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>/* Main Function */ 
</span><span class='line'>function sendmail($to, $from, $subject = "", $body = "", $mailtype, $cc = "", $bcc = "", $additional_headers = "") { 
</span><span class='line'>    $mail_from = $this-&gt;get_address($this-&gt;strip_comment($from)); 
</span><span class='line'>    $body = ereg_replace("(^(\r\n))(\.)", "\1.\3", $body); 
</span><span class='line'>    $header = "MIME-Version:1.0\r\n"; 
</span><span class='line'>    if($mailtype=="HTML"){ 
</span><span class='line'>        $header .= "Content-Type:text/html\r\n"; 
</span><span class='line'>    } 
</span><span class='line'>    $header .= "To: ".$to."\r\n"; 
</span><span class='line'>    if ($cc != "") { 
</span><span class='line'>        $header .= "Cc: ".$cc."\r\n"; 
</span><span class='line'>    } 
</span><span class='line'>    $header .= "From: $from&lt;".$from."&gt;\r\n"; 
</span><span class='line'>    $header .= "Subject: ".$subject."\r\n"; 
</span><span class='line'>    $header .= $additional_headers; 
</span><span class='line'>    $header .= "Date: ".date("r")."\r\n"; 
</span><span class='line'>    $header .= "X-Mailer:By Redhat (PHP/".phpversion().")\r\n"; 
</span><span class='line'>    list($msec, $sec) = explode(" ", microtime()); 
</span><span class='line'>    $header .= "Message-ID: &lt;".date("YmdHis", $sec).".".($msec*1000000).".".$mail_from."&gt;\r\n"; 
</span><span class='line'>    $TO = explode(",", $this-&gt;strip_comment($to)); 
</span><span class='line'>    if ($cc != "") { 
</span><span class='line'>        $TO = array_merge($TO, explode(",", $this-&gt;strip_comment($cc))); 
</span><span class='line'>    } 
</span><span class='line'>    if ($bcc != "") { 
</span><span class='line'>        $TO = array_merge($TO, explode(",", $this-&gt;strip_comment($bcc))); 
</span><span class='line'>    } 
</span><span class='line'>
</span><span class='line'>    $sent = TRUE; 
</span><span class='line'>    foreach ($TO as $rcpt_to) { 
</span><span class='line'>        $rcpt_to = $this-&gt;get_address($rcpt_to); 
</span><span class='line'>        if (!$this-&gt;smtp_sockopen($rcpt_to)) { 
</span><span class='line'>            $this-&gt;log_write("Error: Cannot send email to ".$rcpt_to."\n"); 
</span><span class='line'>            $sent = FALSE; 
</span><span class='line'>            continue; 
</span><span class='line'>        } 
</span><span class='line'>        if ($this-&gt;smtp_send($this-&gt;host_name, $mail_from, $rcpt_to, $header, $body)) { 
</span><span class='line'>            $this-&gt;log_write("E-mail has been sent to &lt;".$rcpt_to."&gt;\n"); 
</span><span class='line'>        } else { 
</span><span class='line'>            $this-&gt;log_write("Error: Cannot send email to &lt;".$rcpt_to."&gt;\n"); 
</span><span class='line'>            $sent = FALSE; 
</span><span class='line'>        } 
</span><span class='line'>        fclose($this-&gt;sock); 
</span><span class='line'>        this-&gt;log_write("Disconnected from remote host\n"); 
</span><span class='line'>    } 
</span><span class='line'>    return $sent; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>/* Private Functions */ 
</span><span class='line'>function smtp_send($helo, $from, $to, $header, $body = "") { 
</span><span class='line'>    if (!$this-&gt;smtp_putcmd("HELO", $helo)) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending HELO command"); 
</span><span class='line'>    } 
</span><span class='line'>
</span><span class='line'>    if($this-&gt;auth){ 
</span><span class='line'>        if (!$this-&gt;smtp_putcmd("AUTH LOGIN", base64_encode($this-&gt;user))) { 
</span><span class='line'>            return $this-&gt;smtp_error("sending HELO command"); 
</span><span class='line'>        } 
</span><span class='line'>        if (!$this-&gt;smtp_putcmd("", base64_encode($this-&gt;pass))) { 
</span><span class='line'>            return $this-&gt;smtp_error("sending HELO command"); 
</span><span class='line'>        } 
</span><span class='line'>    } 
</span><span class='line'>
</span><span class='line'>    if (!$this-&gt;smtp_putcmd("MAIL", "FROM:&lt;".$from."&gt;")) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending MAIL FROM command"); 
</span><span class='line'>    } 
</span><span class='line'>    if (!$this-&gt;smtp_putcmd("RCPT", "TO:&lt;".$to."&gt;")) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending RCPT TO command"); 
</span><span class='line'>    } 
</span><span class='line'>    if (!$this-&gt;smtp_putcmd("DATA")) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending DATA command"); 
</span><span class='line'>    } 
</span><span class='line'>    if (!$this-&gt;smtp_message($header, $body)) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending message"); 
</span><span class='line'>    } 
</span><span class='line'>    if (!$this-&gt;smtp_eom()) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt; [EOM]"); 
</span><span class='line'>    } 
</span><span class='line'>    if (!$this-&gt;smtp_putcmd("QUIT")) { 
</span><span class='line'>        return $this-&gt;smtp_error("sending QUIT command"); 
</span><span class='line'>    } 
</span><span class='line'>    return TRUE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_sockopen($address) { 
</span><span class='line'>    if ($this-&gt;relay_host == "") { 
</span><span class='line'>        return $this-&gt;smtp_sockopen_mx($address); 
</span><span class='line'>    } else { 
</span><span class='line'>        return $this-&gt;smtp_sockopen_relay(); 
</span><span class='line'>    } 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_sockopen_relay() { 
</span><span class='line'>    $this-&gt;log_write("Trying to ".$this-&gt;relay_host.":".$this-&gt;smtp_port."\n"); 
</span><span class='line'>    $this-&gt;sock = @fsockopen($this-&gt;relay_host, $this-&gt;smtp_port, $errno, $errstr, $this-&gt;time_out); 
</span><span class='line'>    if (!($this-&gt;sock &amp;&amp; $this-&gt;smtp_ok())) { 
</span><span class='line'>        $this-&gt;log_write("Error: Cannot connenct to relay host ".$this-&gt;relay_host."\n"); 
</span><span class='line'>        $this-&gt;log_write("Error: ".$errstr." (".$errno.")\n"); 
</span><span class='line'>        return FALSE; 
</span><span class='line'>    } 
</span><span class='line'>    $this-&gt;log_write("Connected to relay host ".$this-&gt;relay_host."\n"); 
</span><span class='line'>    return TRUE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_sockopen_mx($address) { 
</span><span class='line'>    $domain = ereg_replace("^.+@([^@]+)$", "\1", $address); 
</span><span class='line'>    if (!@getmxrr($domain, $MXHOSTS)) { 
</span><span class='line'>        $this-&gt;log_write("Error: Cannot resolve MX \"".$domain."\"\n"); 
</span><span class='line'>        return FALSE; 
</span><span class='line'>    } 
</span><span class='line'>    foreach ($MXHOSTS as $host) { 
</span><span class='line'>        $this-&gt;log_write("Trying to ".$host.":".$this-&gt;smtp_port."\n"); 
</span><span class='line'>        $this-&gt;sock = @fsockopen($host, $this-&gt;smtp_port, $errno, $errstr, $this-&gt;time_out); 
</span><span class='line'>        if (!($this-&gt;sock &amp;&amp; $this-&gt;smtp_ok())) { 
</span><span class='line'>            $this-&gt;log_write("Warning: Cannot connect to mx host ".$host."\n"); 
</span><span class='line'>            $this-&gt;log_write("Error: ".$errstr." (".$errno.")\n"); 
</span><span class='line'>            continue; 
</span><span class='line'>        } 
</span><span class='line'>        $this-&gt;log_write("Connected to mx host ".$host."\n"); 
</span><span class='line'>        return TRUE; 
</span><span class='line'>    } 
</span><span class='line'>    $this-&gt;log_write("Error: Cannot connect to any mx hosts (".implode(", ", $MXHOSTS).")\n"); 
</span><span class='line'>    return FALSE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_message($header, $body) { 
</span><span class='line'>    fputs($this-&gt;sock, $header."\r\n".$body); 
</span><span class='line'>    $this-&gt;smtp_debug("&gt; ".str_replace("\r\n", "\n"."&gt; ", $header."\n&gt; ".$body."\n&gt; ")); 
</span><span class='line'>    return TRUE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_eom() { 
</span><span class='line'>    fputs($this-&gt;sock, "\r\n.\r\n"); 
</span><span class='line'>    $this-&gt;smtp_debug(". [EOM]\n"); 
</span><span class='line'>    return $this-&gt;smtp_ok(); 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_ok() { 
</span><span class='line'>    $response = str_replace("\r\n", "", fgets($this-&gt;sock, 512)); 
</span><span class='line'>    $this-&gt;smtp_debug($response."\n"); 
</span><span class='line'>    if (!ereg("^[23]", $response)) { 
</span><span class='line'>        fputs($this-&gt;sock, "QUIT\r\n"); 
</span><span class='line'>        fgets($this-&gt;sock, 512); 
</span><span class='line'>        $this-&gt;log_write("Error: Remote host returned \"".$response."\"\n"); 
</span><span class='line'>        return FALSE; 
</span><span class='line'>    } 
</span><span class='line'>    return TRUE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_putcmd($cmd, $arg = "") { 
</span><span class='line'>    if ($arg != "") { 
</span><span class='line'>        if($cmd=="") $cmd = $arg; 
</span><span class='line'>        else $cmd = $cmd." ".$arg; 
</span><span class='line'>    } 
</span><span class='line'>    fputs($this-&gt;sock, $cmd."\r\n"); 
</span><span class='line'>    $this-&gt;smtp_debug("&gt; ".$cmd."\n"); 
</span><span class='line'>    return $this-&gt;smtp_ok(); 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_error($string) { 
</span><span class='line'>    $this-&gt;log_write("Error: Error occurred while ".$string.".\n"); 
</span><span class='line'>    return FALSE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function log_write($message) { 
</span><span class='line'>    $this-&gt;smtp_debug($message); 
</span><span class='line'>    if ($this-&gt;log_file == "") { 
</span><span class='line'>        return TRUE; 
</span><span class='line'>    } 
</span><span class='line'>    $message = date("M d H:i:s ").get_current_user()."[".getmypid()."]: ".$message; 
</span><span class='line'>    if (!@file_exists($this-&gt;log_file) !($fp = @fopen($this-&gt;log_file, "a"))) { 
</span><span class='line'>        $this-&gt;smtp_debug("Warning: Cannot open log file \"".$this-&gt;log_file."\"\n"); 
</span><span class='line'>        return FALSE;; 
</span><span class='line'>    } 
</span><span class='line'>    flock($fp, LOCK_EX); 
</span><span class='line'>    fputs($fp, $message); 
</span><span class='line'>    fclose($fp); 
</span><span class='line'>    return TRUE; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function strip_comment($address) { 
</span><span class='line'>    $comment = "\([^()]*\)"; 
</span><span class='line'>    while (ereg($comment, $address)) { 
</span><span class='line'>    $address = ereg_replace($comment, "", $address); 
</span><span class='line'>    } 
</span><span class='line'>    return $address; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function get_address($address) { 
</span><span class='line'>    $address = ereg_replace("([ \t\r\n])+", "", $address); 
</span><span class='line'>    $address = ereg_replace("^.*&lt;(.+)&gt;.*$", "\1", $address); 
</span><span class='line'>    return $address; 
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>function smtp_debug($message) { 
</span><span class='line'>    if ($this-&gt;debug) { 
</span><span class='line'>        echo $message; 
</span><span class='line'>    } 
</span><span class='line'>} 
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>?></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
