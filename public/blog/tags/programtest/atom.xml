<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ProgramTest | Bill's Blog]]></title>
  <link href="http://ibillxia.github.io/blog/tags/programtest/atom.xml" rel="self"/>
  <link href="http://ibillxia.github.io/"/>
  <updated>2014-04-28T23:13:20+08:00</updated>
  <id>http://ibillxia.github.io/</id>
  <author>
    <name><![CDATA[Bill Xia]]></name>
    <email><![CDATA[ibillxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[11年浙大复试机试题解]]></title>
    <link href="http://ibillxia.github.io/blog/2012/03/07/11-zju-program-test-solution/"/>
    <updated>2012-03-07T19:56:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2012/03/07/11-zju-program-test-solution</id>
    <content type="html"><![CDATA[<p>
11年浙大研究生复试机试题解
</p>




<h3>A题：A+B for Matrices （ 九度1001）</h3>


<p>水题</p>


<p>{% codeblock Problem A %}</p>

<h1>include &lt;stdio.h></h1>

<p>int m,n,a[10][10],b[10][10];
int main()
{</p>

<pre><code>int i,j,cnt;
while(scanf("%d",&amp;m)&amp;&amp;m&gt;0){
    scanf("%d",&amp;n);
    for(i=0;i&lt;m;i++)
        for(j=0;j&lt;n;j++)
            scanf("%d",a[i]+j);
    for(i=0;i&lt;m;i++)
        for(j=0;j&lt;n;j++){
            scanf("%d",b[i]+j);
            a[i][j]+=b[i][j];
        }
    cnt=0;
    for(i=0;i&lt;m;i++){
        for(j=0;j&lt;n;j++)
            if(a[i][j])break;
        if(j==n)cnt++;
    }
    for(i=0;i&lt;n;i++){
        for(j=0;j&lt;m;j++)
            if(a[j][i])break;
        if(j==m)cnt++;
    }
    printf("%d\n",cnt);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<!-- more -->


<h3>B题：Grading（ 九度 1002 ）</h3>


<p>继续水题！</p>


<p>{% codeblock Problem B %}</p>

<h1>include &lt;stdio.h></h1>

<p>int main()
{</p>

<pre><code>int p,t,g1,g2,g3,gj,t1,t2;
while(scanf("%d %d %d %d %d %d",&amp;p,&amp;t,&amp;g1,&amp;g2,&amp;g3,&amp;gj)!=EOF){
    if(g1-g2&lt;=t&amp;&amp;g2-g1&lt;=t){printf("%.1f\n",(g1+g2)/2.0);continue;}
    t1=g3&gt;g1 ? g3-g1 : g1-g3;
    t2=g3&gt;g2 ? g3-g2 : g2-g3;
    if(t1&gt;t&amp;&amp;t2&gt;t){printf("%.1f\n",(float)gj);continue;}
    if(t1&lt;=t&amp;&amp;t2&lt;=t) {
        if(g1&lt;g2)g1=g2;
        if(g1&lt;g3)g1=g3;
        printf("%.1f\n",(float)g1);
        continue;
    }
    if(t1&gt;t2)printf("%.1f\n",(g2+g3)/2.0);
    else printf("%.1f\n",(g1+g3)/2.0);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>C题：Median（ 九度 1004）</h3>


<p>再继续水题！</p>


<p>{% codeblock Problem C %}</p>

<h1>include &lt;stdio.h></h1>

<p>long m,n,a[1000000],b[1000000];
int main()
{</p>

<pre><code>int i,j,k,t,mid;
while(scanf("%d",&amp;m)!=EOF){
    for(i=0;i&lt;m;i++)scanf("%d",a+i);
    scanf("%d",&amp;n);
    for(i=0;i&lt;n;i++)scanf("%d",b+i);
    i=j=k=0;t=(m+n+1)/2;
    while(i&lt;m&amp;&amp;j&lt;n&amp;&amp;k&lt;t){
        if(a[i]&gt;b[j]){mid=b[j];j++;}
        else {mid=a[i];i++;}
        k++;
    }
    if(i==m&amp;&amp;k&lt;t){
        while(k&lt;t){j++;k++;}
        mid=b[j-1];
    }else if(j==n&amp;&amp;k&lt;t){
        while(k&lt;t){i++;k++;}
        mid=a[i-1];
    }
    printf("%d\n",mid);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>D题：Graduate Admission（ 九度 1005）</h3>


<p>有点麻烦，要细心！</p>


<p>{% codeblock Problem D %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;memory.h></h1>

<p>//m为学校数，n为学生数，k为学生填报的志愿数
//mq[i][0]为学校i计划招生数，mq[i][1]为学校实际招生数，
//mq[i][2] ~ mq[i][mq[i][1]+1]为招收的学生的学号
//ng[i][0]为学生学号，ng[i][1]为学生总成绩，ng[i][2]为学生面试成绩，
//ng[i][2]后面的k个数据是填报的志愿
int m,n,k,mq[100][1000],ng[40000][8];
int cmp1(const void<em>a,const void</em>b){</p>

<pre><code>int *t1,*t2;
t1=(int*)a;t2=(int*)b;
if(t1[1]!=t2[1])return t2[1]-t1[1];
else return t1[2]-t2[2];  //总分相同时，面试成绩高的笔试成绩低
</code></pre>

<p>}
int cmp2(const void<em>a,const void</em>b){return <em>(int</em>)a-<em>(int</em>)b;}
int main()
{</p>

<pre><code>int i,j,t,p,q;
//freopen("in.txt","r",stdin);
//freopen("out.txt","w+",stdout);
while(scanf("%d %d %d",&amp;n,&amp;m,&amp;k)!=EOF){
    memset(mq,0,sizeof(mq));
    memset(ng,0,sizeof(ng));
    //输入部分
    for(i=0;i&lt;m;i++)scanf("%d",mq+i);
    for(i=0;i&lt;n;i++){
        ng[i][0]=i;
        for(j=1;j&lt;k+3;j++)
            scanf("%d",ng[i]+j);
        ng[i][1]=ng[i][1]+ng[i][2];
    }
    //处理部分
    qsort(ng,n,sizeof(ng[0]),cmp1);  //将考生按分数排名
    //debug:输出排名
    //for(i=0;i&lt;n;i++)printf("%2d:%2d %d %d %d\n",i,ng[i][0],ng[i][3],ng[i][4],ng[i][5]);
    for(i=0;i&lt;n;i++){  //将考生按名次分配给各学校
        for(j=3;j&lt;k+3;j++){ //从考生第一志愿开始选学校
            t=ng[i][j];  //排名为i的考生报考的第j-3个学校，学校编号为t
            if(mq[t][0]&gt;0){
                if(mq[t][0]&gt;mq[t][1]){   //在学校招生名额范围内
                    mq[t][1]++;
                    mq[t][mq[t][1]+1]=ng[i][0];  //学校t招收学生ng[i][0]
                    break;
                } else{   //招生名额范围外，排名相同的考生
                    p=mq[t][mq[t][1]+1];  //p为已招收的最后一个考生的学号
                    for(q=0;q&lt;i;q++)   //查找学号为p的考生排名后的位置k
                        if(ng[q][0]==p){p=q;break;}
                        if(ng[p][1]==ng[i][1]&amp;&amp;ng[p][2]==ng[i][2]){  //判断排名是否相同
                        mq[t][1]++;
                        mq[t][mq[t][1]+1]=ng[i][0];   //录取排名相同的考生
                        break;
                    }
                }
            }
        }
    }
    //输出部分
    for(i=0;i&lt;m;i++){ //分配给每个学校的学生，先按学号排序，再输出
        qsort(mq[i]+2,mq[i][1],sizeof(mq[i][2]),cmp2);
        if(mq[i][1]&gt;0)printf("%d",mq[i][2]);
        for(j=3;j&lt;mq[i][1]+2;j++)printf(" %d",mq[i][j]);
        printf("\n");
    }
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>总体来说，这套题比较简单！</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10年浙大复试机试题解]]></title>
    <link href="http://ibillxia.github.io/blog/2012/03/07/10-zju-program-test-solution/"/>
    <updated>2012-03-07T12:08:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2012/03/07/10-zju-program-test-solution</id>
    <content type="html"><![CDATA[<p>
10年浙大研究生复试机试题解
</p>




<h3>A题：A+B（hdoj3787）（九度1003）</h3>


<p>水题，不解释，直接上代码：</p>


<p>{% codeblock Problem A %}</p>

<h1>include &lt;stdio.h></h1>

<p>long a,b;
int main()
{</p>

<pre><code>int i,f;
char s[30];
while(scanf("%s",s)!=EOF){
    a=b=0;
    if(s[0]=='-'){f=-1;i=1;}
    else {f=1;i=0;}
    while(s[i]){
        if(s[i]!=',')a=a*10+s[i]-'0';
        i++;
    }
    a=a*f;
    getchar();
    scanf("%s",s);
    if(s[0]=='-'){f=-1;i=1;}
    else {f=1;i=0;}
    while(s[i]){
        if(s[i]!=',')b=b*10+s[i]-'0';
        i++;
    }
    b=b*f;
    printf("%d\n",a+b);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<!-- more -->


<h3>B题：ZOJ问题（hdoj3788）（九度1006）</h3>


<p>题目不是很好懂，要仔细阅读，根据题目的三个条件找规律，
最后发现Accepted的字符串应满足如下条件：</br>
设a为第一个z前o的个数，b为z和j之间o的个数，c为j之后o的个数，
则有c=a*b，其中b>0.代码如下：
</p>


<p>{% codeblock Problem B %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;string.h></h1>

<p>char s[1001];
int main()
{</p>

<pre><code>int a,b,c;
char *p;
while(scanf("%s",s)!=EOF){
    if(!strcmp(s,"zoj")){printf("Accepted\n");continue;}
    a=b=c=0;
    p=s;
    while(*p=='o'){a++;p++;}
    if(*p=='z'){
        p++;
        while(*p=='o'){b++;p++;}
        if(*p=='j'){
            p++;
            while(*p=='o'){c++;p++;}
            if(!(*p) &amp;&amp; b&gt;0 &amp;&amp; c==a*b){printf("Accepted\n");continue;}
        }
    }
    printf("Wrong Answer\n");
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>C题：奥运排序问题（hdoj3789）（九度1007）</h3>


<p>排序问题，题目不难，但要把题目理解正确、做正确却不是那么容易。
注意（1）只需要给M个（而不是N个）国家排序；
（2）最后输出结果要按输入的顺序给出（hdoj，但在九度上是要按照国家的编号小到大顺序输出）。
hdoj AC的代码如下：</p>


<p>{% codeblock Problem C %}</p>

<h1>include&lt;stdio.h></h1>

<h1>include&lt;stdlib.h></h1>

<h1>include&lt;string.h></h1>

<h1>include<algorithm></h1>

<p>using namespace std;</p>

<p>const int INF=10005;
struct node{</p>

<pre><code>float gold,medal,gm,mm,man;
int no,fs,pm,bc;
</code></pre>

<p>}a[10005],b[10005]; //fs表示排序方式，bc表示本次排名，pm表示最终排名</p>

<p>int com1(node a,node b){return a.gold>b.gold;}
int com2(node a,node b){return a.medal>b.medal;}
int com3(node a,node b){return a.gm>b.gm;}
int com4(node a,node b){return a.mm>b.mm;}
int com5(node a,node b){return a.no&lt;b.no;}</p>

<p>int main()
{</p>

<pre><code>int i,t,m,n;
//freopen("in.txt","r",stdin);
//freopen("out2.txt","w+",stdout);
while(scanf("%d%d",&amp;n,&amp;m)!=EOF){
    for(i=1;i&lt;=n;i++){
        scanf("%f%f%f",&amp;a[i].gold,&amp;a[i].medal,&amp;a[i].man);
        a[i].gm=a[i].gold/a[i].man;
        a[i].mm=a[i].medal/a[i].man;
        a[i].no=i;a[i].pm=INF;
    }
    for(i=1;i&lt;=m;i++){//选出要排序的m个数给b
        scanf("%d",&amp;t);
        b[i]=a[t+1];
        b[i].no=i;
    }
    sort(b+1,b+m+1,com1);//按gold排序
    b[0].bc=1;b[0].gold=b[0].medal=b[0].gm=b[0].mm=-1;
    for(i=1;i&lt;=m;i++){
        if(b[i].gold==b[i-1].gold){b[i].bc=b[i-1].bc;} //处理相同名次的
        else b[i].bc=i;
        if(b[i].pm&gt;b[i].bc){b[i].pm=b[i].bc;b[i].fs=1;}
    }
    sort(b+1,b+m+1,com2);//按medal排序
    for(i=1;i&lt;=m;i++){
        if(b[i].medal==b[i-1].medal){b[i].bc=b[i-1].bc;}
        else b[i].bc=i;
        if(b[i].pm&gt;b[i].bc){b[i].pm=b[i].bc;b[i].fs=2;}
    }
    sort(b+1,b+m+1,com3);//按gm排序
    for(i=1;i&lt;=m;i++){
        if(b[i].gm==b[i-1].gm){b[i].bc=b[i-1].bc;}
        else b[i].bc=i;
        if(b[i].pm&gt;b[i].bc){b[i].pm=b[i].bc;b[i].fs=3;}
    }
    sort(b+1,b+m+1,com4);//按mm排序
    for(i=1;i&lt;=m;i++){
        if(b[i].mm==b[i-1].mm){b[i].bc=b[i-1].bc;}
        else b[i].bc=i;
        if(b[i].pm&gt;b[i].bc){b[i].pm=b[i].bc;b[i].fs=4;}
    }
    sort(b+1,b+m+1,com5);//按no排序
    for(i=1;i&lt;=m;i++)
        printf("%d:%d\n",b[i].pm,b[i].fs);
    printf("\n");
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>D题：最短路径问题（hdoj3790）（九度1008）</h3>


<p>双重最短路问题，用dijkstra算法（模板题）。代码如下：</p>


<p>{% codeblock Problem D %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<h1>define INF 0x1fffffff</h1>

<h1>define N 1000</h1>

<p>int m,n,s,t,g[N][N][2],lp[N],lc[N],v[N];
void dijkstra(){</p>

<pre><code>int i,j,k,md,mp;
memset(v,0,sizeof(v));
memset(lp,0,sizeof(lp));
memset(lc,0,sizeof(lc));
for(i=0;i&lt;n;i++)lp[i]=g[s][i][0];
for(i=0;i&lt;n;i++)lc[i]=g[s][i][1];
v[s]=1;
for(i=0;i&lt;n;i++){
    k=-1;md=INF;mp=INF;
    for(j=0;j&lt;n;j++)
        if(!v[j]){
            if(lp[j]&lt;md){k=j;md=lp[j];mp=lc[j];}
            else if(lp[j]==md&amp;&amp;lc[j]&lt;mp){k=j;mp=lc[j];}
        }
    if(k==t)return;
    v[k]=1;
    for(j=0;j&lt;n;j++)
        if(lp[j]&gt;lp[k]+g[k][j][0]){
            lp[j]=lp[k]+g[k][j][0];
            lc[j]=lc[k]+g[k][j][1];
        }else if(lp[j]==lp[k]+g[k][j][0]&amp;&amp;lc[j]&gt;lc[k]+g[j][k][1]){
            lp[j]=lp[k]+g[k][j][0];
            lc[j]=lc[k]+g[k][j][1];
        }
}
</code></pre>

<p>}
int main()
{</p>

<pre><code>int i,j,a,b,d,p;
while(scanf("%d %d",&amp;n,&amp;m)!=EOF){
    if(m==0&amp;&amp;n==0)break;
    for(i=0;i&lt;n;i++)
        for(j=0;j&lt;n;j++)
            g[i][j][0]=g[i][j][1]=INF;


    for(i=0;i&lt;m;i++){
        scanf("%d %d %d %d",&amp;a,&amp;b,&amp;d,&amp;p);
        a--;b--;
        if(g[a][b][0]&gt;d){
            g[a][b][0]=g[b][a][0]=d;
            g[a][b][1]=g[b][a][1]=p;
        }
    }
    scanf("%d %d",&amp;s,&amp;t);
    s--;t--;
    dijkstra();
    printf("%d %d\n",lp[t],lc[t]);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>E题：二叉搜索树（hdoj3791）（九度1009）</h3>


<p>题目给的数据的范围很小，一开始就考虑用数组来存储树，提交后RE了。
没办法，改用指针实现，果断AC了，代码如下：</p>


<p>{% codeblock Problem E %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;string.h></h1>

<p>typedef struct node{</p>

<pre><code>int data;
struct node *lchild,*rchild;
</code></pre>

<p>}btnode,<em>btree;
int n;
btree ta,tb;
void creat(char s[],btree </em>t){</p>

<pre><code>int i,k;
btree p,q;
if(s[0]=='\0'){t=NULL;return;}
*t=(btree)malloc(sizeof(btnode));
(*t)-&gt;data=s[0]-'0';
(*t)-&gt;lchild=(*t)-&gt;rchild=NULL;
i=1;
while(s[i]){
    k=s[i]-'0';
    p=*t;
    while(p){
        q=p;
        if(k&lt;p-&gt;data) p=p-&gt;lchild;
        else p=p-&gt;rchild;
    }
    p=(btree)malloc(sizeof(btnode));
    p-&gt;data=k;
    p-&gt;lchild=p-&gt;rchild=NULL;
    if(k&lt;q-&gt;data)q-&gt;lchild=p;
    else q-&gt;rchild=p;
    i++;
}
</code></pre>

<p>}
int cmp(btree ta,btree tb){</p>

<pre><code>btree p,q;
p=ta;q=tb;
if((p&amp;&amp;!q)||(q&amp;&amp;!p)||(p&amp;&amp;q&amp;&amp;p-&gt;data!=q-&gt;data))return 0;
if(p&amp;&amp;q&amp;&amp;p-&gt;data==q-&gt;data)
    if(!cmp(p-&gt;lchild,q-&gt;lchild)||!cmp(p-&gt;rchild,q-&gt;rchild))
        return 0;
return 1;
</code></pre>

<p>}
int main()
{</p>

<pre><code>char str[12];
int i,la,lb;
while(scanf("%d",&amp;n)&amp;&amp;n!=0){
    scanf("%s",str);
    la=strlen(str);
    creat(str,&amp;ta);
    for(i=0;i&lt;n;i++){
        scanf("%s",str);
        lb=strlen(str);
        if(lb!=la){printf("NO\n");continue;}
        creat(str,&amp;tb);
        if(cmp(ta,tb))printf("YES\n");
        else printf("NO\n");
    }
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>小结：个人感觉，整套题目是这几年来最难得，只因为B题难读懂，C题题意容易误读，
D题的双重最短路初次做，表示不会，E题的测试数据又不按题目要求给，很坑爹啊！
如果不幸在10年考的话，估计结局会很悲剧了。</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[09年浙大复试机试题解]]></title>
    <link href="http://ibillxia.github.io/blog/2012/03/05/09-zju-program-test-solution/"/>
    <updated>2012-03-05T16:48:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2012/03/05/09-zju-program-test-solution</id>
    <content type="html"><![CDATA[<p>
09年浙大研究生复试机试题解
</p>




<h3>A题：xxx定律（hdoj3782）（九度1031）</h3>


<p>水题，直接上代码：</p>


<p>{% codeblock Problem A %}</p>

<h1>include &lt;stdio.h></h1>

<p>int main()
{</p>

<pre><code>int n,cnt;
while(scanf("%d",&amp;n)&amp;&amp;n!=0){
    if(n==1){printf("0\n");continue;}
    cnt=0;
    while(n!=1){
        if(n%2)n=(3*n+1)&gt;&gt;1;
        else n=n&gt;&gt;1;
        cnt++;
    }
    printf("%d\n",cnt);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<!-- more -->


<h3>B题：ZOJ（hdoj3783）（九度1032）</h3>


<p>继续水题</p>


<p>{% codeblock Problem B %}</p>

<h1>include &lt;stdio.h></h1>

<p>char s[102];
int main()
{</p>

<pre><code>int i,z,o,j;
while(scanf("%s",s)){
    if(s[0]=='E')break;
    z=o=j=0;
    for(i=0;s[i]!=0;i++){
        switch(s[i]){
            case 'Z':z++;break;
            case 'O':o++;break;
            case 'J':j++;break;
        }
    }
    while(i){
        if(z){printf("Z");z--;}
        if(o){printf("O");o--;}
        if(j){printf("J");j--;}
        i--;
    }
    printf("\n");
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>C题：继续xxx定律（hdoj3784）（九度1033）</h3>


<p>题目不是很好懂，但只要认真看题目，还是不是很难的，值得注意的是，
如果在前面是关简数，而后面却是作为覆盖数的数，一律当做覆盖数而不是关键数。
代码如下：</p>


<p>{% codeblock Problem C %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<p>int n,a[510];
char b[1002];
int main()
{</p>

<pre><code>int i,t;
while(scanf("%d",&amp;n)!=EOF){
    if(n==0)continue;
    memset(a,0,sizeof(a));
    memset(b,0,sizeof(b));
    for(i=0;i&lt;n;i++)scanf("%d",a+i);
    for(i=0;i&lt;n;i++){
        t=a[i];
        if(t==1||b[t])continue;
        while(t!=1){
            if(t%2)t=(3*t+1)&gt;&gt;1;
            else t=t&gt;&gt;1;
            if(t&lt;1002)b[t]=1;
        }
    }
    i--;t=0;
    while(i&gt;=0){
        if(t &amp;&amp; !b[a[i]])printf(" ");
        if(!b[a[i]]){printf("%d",a[i]);t=1;}
        i--;
    }
    if(t)printf("\n");
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>D题：寻找大富翁（hdoj3785）（九度1034）</h3>


<p>水题，注意不要进行排序，不然就可能会超时。</p>


<p>{% codeblock Problem D %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<p>int m,n,a[100002],b[10];
int main()
{</p>

<pre><code>int i,j,k;
while(scanf("%d %d",&amp;n,&amp;m)){
    if(m==0&amp;&amp;n==0)break;
    for(i=0;i&lt;n;i++)scanf("%d",a+i);
    memset(b,0,sizeof(b));
    for(i=0;i&lt;n;i++){
        for(j=0;j&lt;m;j++)
            if(a[i]&gt;=b[j]){
                for(k=m-1;k&gt;j;k--)b[k]=b[k-1];
                b[j]=a[i];
                break;
            }
    }
    for(i=0;i&lt;m-1;i++)
        printf("%d ",b[i]);
    printf("%d\n",b[i]);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>E题：找出直系血亲（hdoj3786）（九度1035）</h3>


<p>水题，直接用DFS即可</p>


<p>{% codeblock Problem E %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<p>int m,n;
char tree[27];
int dfs(char a,char b){</p>

<pre><code>int dp;
char t;
dp=0;
t=a;
while(t){
    dp++;
    t=tree[t];
    if(t==b)return dp;
}
return 0;
</code></pre>

<p>}
int main()
{</p>

<pre><code>int i,d;
char s[4];
while(scanf("%d %d",&amp;n,&amp;m)){
    if(m==0&amp;&amp;n==0)break;
    memset(tree,0,sizeof(tree));
    for(i=0;i&lt;n;i++){
        scanf("%s",s);
        if(s[1]!='-')tree[s[1]-64]=s[0]-64;
        if(s[2]!='-')tree[s[2]-64]=s[0]-64;
    }
    for(i=0;i&lt;m;i++){
        scanf("%s",s);
        d=dfs(s[0]-64,s[1]-64);
        if(!d)d=-dfs(s[1]-64,s[0]-64);
        if(!d){printf("-\n");continue;}
        while(d&gt;2||d&lt;-2){
            printf("great-");
            if(d&gt;0)d--;
            else d++;
        }
        switch(d){
            case 2:printf("grandparent\n");break;
            case 1:printf("parent\n");break;
            case -1:printf("child\n");break;
            case -2:printf("grandchild\n");break;
        }
    }
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>小结：除了C题题目有点费解外，其他题都不难，可以说是既没考图论，又没有考DP。</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[08年浙大复试机试题解]]></title>
    <link href="http://ibillxia.github.io/blog/2012/03/04/08-zju-program-test-solution/"/>
    <updated>2012-03-04T22:42:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2012/03/04/08-zju-program-test-solution</id>
    <content type="html"><![CDATA[<p>
08年浙大研究生复试机试题解
</p>




<h3>A题：又一版A+B（hdoj1877）（九度1026）</h3>


<p>水题，直接上代码：</p>


<p>{% codeblock Problem A %}</p>

<h1>include &lt;stdio.h></h1>

<p>char out[34];
unsigned int m,a,b,c;
int main()
{</p>

<pre><code>int i;
while(scanf("%d",&amp;m)&amp;&amp;m!=0){
    scanf("%d %d",&amp;a,&amp;b);
    c=a+b;
    if(c==0){printf("0\n");continue;}
    i=0;
    while(c){
        out[i++]=c%m;
        c/=m;
    }
    while(i)
        printf("%d",out[--i]);
    printf("\n");
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<!-- more -->


<h3>B题：欧拉回路（hdoj1878）（九度1027）</h3>


<p>对于无向图，存在欧拉回路的条件是：图连通，顶点的度为偶数。
对于有向图，存在欧拉回路的条件是：图强连通，顶点的入度等于出度。代码如下：</p>


<p>{% codeblock Problem B %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<p>int m,n,v[1000],g[1000][1000];
int main()
{</p>

<pre><code>int i,j,a,b;
while(scanf("%d",&amp;n)&amp;&amp;n!=0){
    scanf("%d",&amp;m);
    memset(v,0,sizeof(v));
    memset(g,0,sizeof(g));
    for(i=0;i&lt;m;i++){
        scanf("%d %d",&amp;a,&amp;b);
        g[a-1][b-1]=g[b-1][a-1]=1;
        v[a-1]++;v[b-1]++;
    }
    if(m&lt;n){printf("0\n");continue;}
    for(i=0;i&lt;n;i++)if(v[i]%2)break;  //判断度是否为偶数
    if(i&lt;n)printf("0\n");
    else{  //DFS判断图是否连通
        memset(v,0,sizeof(v));
        v[0]=1;j=0;
        for(i=0;i&lt;n;i++){
            if(!v[i] &amp;&amp; g[j][i]){
                v[i]=1;j=i;i=0;
            }
        }
        for(i=0;i&lt;n;i++)
            if(!v[i]){printf("0\n");break;}
        if(i==n)printf("1\n");
    }
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>C题：继续畅通工程（hdoj1879）（九度1028）</h3>


<p>模板题，prim算法</p>


<p>{% codeblock Problem C %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<h1>define INF 0x1fffffff</h1>

<p>int n,g[100][100];
int main()
{</p>

<pre><code>int i,j,a,b,c,d;
int low[100],v[100],t,min,sum;
while(scanf("%d",&amp;n)&amp;&amp;n!=0){
    for(i=0;i&lt;n;i++)
        for(j=0;j&lt;n;j++)g[i][j]=g[j][i]=INF;
    for(i=0;i&lt;n;i++)g[i][i]=0;
    for(i=0;i&lt;n;i++)
        for(j=i+1;j&lt;n;j++){
            scanf("%d %d %d %d",&amp;a,&amp;b,&amp;c,&amp;d);
            a--;b--;
            if(d==1)g[a][b]=g[b][a]=0;
            else if(g[a][b]&gt;c)g[a][b]=g[b][a]=c;
        }
    memset(v,0,sizeof(v));
    for(i=1;i&lt;n;i++)low[i]=g[0][i];
    v[0]=1;
    sum=0;
    for(i=1;i&lt;n;i++){
        t=-1;min=INF;
        for(j=0;j&lt;n;j++)
            if(!v[j]&amp;&amp;min&gt;low[j]){min=low[j];t=j;}
        sum+=min;
        v[t]=1;
        for(j=0;j&lt;n;j++)
            if(!v[j]&amp;&amp;low[j]&gt;g[t][j])low[j]=g[t][j];
    }
    printf("%d\n",sum);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>D题：魔咒词典（hdoj1880）（九度1029）</h3>


<p>水题，字符串处理，注意不需要排序，不然会超时。</p>


<p>{% codeblock Problem D %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;string.h></h1>

<p>typedef struct node{</p>

<pre><code>char name[24];
char func[82];
</code></pre>

<p>}record;
char s[108];
record dict[100000];
int main()
{</p>

<pre><code>int i,j,m,n,t;
char *p;
i=0;
while(gets(s) &amp;&amp; strcmp(s,"@END@")){
    p=strchr(s,']');
    strncpy(dict[i].name,s,p-s+1);
    strcpy(dict[i].func,p+2);
    i++;
}
m=i;
scanf("%d",&amp;n);
getchar();
for(i=0;i&lt;n;i++){
    gets(s);
    if(s[0]=='['){
        for(j=0;j&lt;m;j++)
            if(!strcmp(s,dict[j].name)){printf("%s\n",dict[j].func);break;}
    }else{
        for(j=0;j&lt;m;j++)
            if(!strcmp(s,dict[j].func)){
                t=strlen(dict[j].name);
                strcpy(s,dict[j].name+1);
                s[t-2]=0;
                printf("%s\n",s);break;
            }
    }
    if(j==m)printf("what?\n");
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>E题：毕业bg（hdoj1881）（九度1030）</h3>


<p>可看做背包问题，将截止时间看做背包的容量，将bg看做重物，构建DP状态方程。代码如下：</p>


<p>{% codeblock Problem E %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;memory.h></h1>

<h1>define MAX(a,b) (a)>(b) ? (a) : (b)</h1>

<p>int n,d[32][3],m[32][2000];
int cmp(const void <em>a,const void </em>b){</p>

<pre><code>return ((int*)a)[2]-((int*)b)[2];
</code></pre>

<p>}
int main()
{</p>

<pre><code>int i,j,tm,mh;
while(scanf("%d",&amp;n) &amp;&amp; n&gt;=0){
    if(n==0)continue;
    tm=0;
    for(i=0;i&lt;n;i++){
        scanf("%d %d %d",d[i],d[i]+1,d[i]+2);
        if(tm&lt;d[i][2])tm=d[i][2];
    }
    qsort(d,n,sizeof(d[0]),cmp);
    memset(m,0,sizeof(m));
    mh=-1;
    for(i=1;i&lt;=n;i++)
        for(j=0;j&lt;=tm;j++){
            if(j&lt;=d[i-1][2]&amp;&amp;j&gt;=d[i-1][1])
                m[i][j]=MAX(m[i-1][j],m[i-1][j-d[i-1][1]]+d[i-1][0]);
            else
                m[i][j]=m[i-1][j];
            if(m[i][j]&gt;mh)mh=m[i][j];
        }
    printf("%d\n",mh);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>小结：个人感觉毕业bg有点小难，主要是以前做过的背包问题太少，思维没有转换过来。
其余的题基本都很水。</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[07年浙大复试机试题解]]></title>
    <link href="http://ibillxia.github.io/blog/2012/03/03/07-zju-program-test-solution/"/>
    <updated>2012-03-03T22:05:00+08:00</updated>
    <id>http://ibillxia.github.io/blog/2012/03/03/07-zju-program-test-solution</id>
    <content type="html"><![CDATA[<p>
07年浙大研究生复试机试题解
</p>




<h3>A题：最小长方形（hdoj1859）（九度1020）</h3>


<p>水题，不解释，代码如下：</p>


<p>{% codeblock Problem A %}</p>

<h1>include &lt;stdio.h></h1>

<p>int main()
{</p>

<pre><code>int lx,ly,rx,ry,tx,ty;
while(1){
    scanf("%d %d",&amp;tx,&amp;ty);
    if(tx==0&amp;&amp;ty==0)break;
    lx=rx=tx;
    ly=ry=ty;
    while(1){
        scanf("%d %d",&amp;tx,&amp;ty);
        if(tx==0&amp;&amp;ty==0)break;
        if(tx&lt;lx)lx=tx;
        if(ty&lt;ly)ly=ty;
        if(tx&gt;rx)rx=tx;
        if(ty&gt;ry)ry=ty;
    }
    printf("%d %d %d %d\n",lx,ly,rx,ry);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<!-- more -->


<h3>B题：统计字符（hdoj1860）（九度1021）</h3>


<p>继续水题，代码如下：</p>


<p>{% codeblock Problem B %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;string.h></h1>

<h1>include &lt;memory.h></h1>

<p>int main()
{</p>

<pre><code>char s[6],str[82];
int i,j,cnt[5],len;
while(1){
    gets(s);
    len=strlen(s);
    if(len==1&amp;&amp;s[0]=='#')break;
    gets(str);
    memset(cnt,0,sizeof(cnt));
    for(j=0;str[j];j++){
        for(i=0;i&lt;len;i++)
            if(str[j]==s[i])cnt[i]++;
    }
    for(i=0;i&lt;len;i++)
        printf("%c %d\n",s[i],cnt[i]);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>C题：游船出租（hdoj1861）（九度1022）</h3>


<p>模拟题，水题。代码如下：</p>


<p>{% codeblock Problem C %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<p>int d[101],f[101];
int main()
{</p>

<pre><code>char ch;
int n,t1,t2,cnt,sum;
cnt=sum=0;
memset(d,0,sizeof(d));
memset(f,0,sizeof(f));
while(scanf("%d",&amp;n) &amp;&amp; n!=-1){
    if(n==0){
        scanf(" %c %d:%d",&amp;ch,&amp;t1,&amp;t2);
        if(cnt==0)printf("0 0\n");
        else printf("%d %d\n",cnt,(int)(sum*1.0/cnt+0.5));
        cnt=sum=0;
        memset(d,0,sizeof(d));
        memset(f,0,sizeof(f));
    }else{
        scanf(" %c %d:%d",&amp;ch,&amp;t1,&amp;t2);
        if(ch=='S'){d[n]=t1*60+t2;f[n]=1;}
        else if(f[n]){
            sum+=t1*60+t2-d[n];
            cnt++;
            f[n]=0;
        }
    }
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>D题：Excel排序（hdoj1862）（九度1023）</h3>


<p>排序题，水题，直接上代码：</p>


<p>{% codeblock Problem D %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;string.h></h1>

<p>typedef struct student{</p>

<pre><code>char num[7];
char name[9];
int score;
</code></pre>

<p>}student;
int n;
student stu[100000];
int cmp1(const void <em>a,const void </em>b){</p>

<pre><code>return strcmp((*(student*)a).num,(*(student*)b).num);
</code></pre>

<p>}
int cmp2(const void <em>a,const void </em>b){</p>

<pre><code>int t=strcmp((*(student*)a).name,(*(student*)b).name);
if(t!=0)return t;
else return strcmp((*(student*)a).num,(*(student*)b).num);
</code></pre>

<p>}
int cmp3(const void <em>a,const void </em>b){</p>

<pre><code>int t=(*(student*)a).score-(*(student*)b).score;
if(t!=0)return t;
else return strcmp((*(student*)a).num,(*(student*)b).num);
</code></pre>

<p>}
int main()
{</p>

<pre><code>int i,c,cnt;
cnt=0;
while(scanf("%d %d",&amp;n,&amp;c)){
    if(n==0)break;
    cnt++;
    for(i=0;i&lt;n;i++)
        scanf("%s %s %d",stu[i].num,stu[i].name,&amp;stu[i].score);
    switch(c){
        case 1: qsort(stu,n,sizeof(stu[0]),cmp1);break;
        case 2: qsort(stu,n,sizeof(stu[0]),cmp2);break;
        case 3: qsort(stu,n,sizeof(stu[0]),cmp3);break;
    }
    printf("Case %d:\n",cnt);
    for(i=0;i&lt;n;i++)
        printf("%s %s %d\n",stu[i].num,stu[i].name,stu[i].score);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>E题：畅通工程（hdoj1863）（九度1024）</h3>


<p>模板题，prim算法</p>


<p>{% codeblock Problem E %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;memory.h></h1>

<h1>define INF 0x7fffffff</h1>

<p>int m,n,cost[100][100];
int solve(void){</p>

<pre><code>int i,j,t,min,rt,vd[100],low[100];
memset(vd,0,sizeof(vd));
rt=0;
vd[0]=1;
for(i=0;i&lt;m;i++)low[i]=cost[0][i];
for(i=1;i&lt;m;i++){
    min=INF;
    t=-1;
    for(j=0;j&lt;m;j++)
        if(!vd[j]&amp;&amp;min&gt;low[j])min=low[t=j];
    if(INF==min)return -1;
    rt+=min;
    vd[t]=1;
    for(j=0;j&lt;m;j++)
        if(!vd[j]&amp;&amp;low[j]&gt;cost[t][j])low[j]=cost[t][j];
}
return rt;
</code></pre>

<p>}
int main()
{</p>

<pre><code>int i,j,a,b,c,min;
while(1){
    scanf("%d %d",&amp;n,&amp;m);
    if(0==n)break;
    for(i=0;i&lt;100;i++)
        for(j=0;j&lt;100;j++)
            cost[i][j]=INF;
    for(i=0;i&lt;n;i++){
        scanf("%d %d %d",&amp;a,&amp;b,&amp;c);
        cost[a-1][b-1]=cost[b-1][a-1]=c;
    }
    min=solve();
    if(min==-1)printf("?\n");
    else printf("%d\n",min);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<h3>F题：最大报销额（hdoj1864）（九度1025）</h3>


<p>典型的背包问题，DP</p>


<p>{% codeblock Problem F %}</p>

<h1>include &lt;stdio.h></h1>

<h1>define PRE 0.0001</h1>

<p>int main()
{</p>

<pre><code>char tp;
int i,j,n,m,cnt,flag;
double t,q,tt[3],sum[30],max,st[30][30];
while(scanf("%lf %d",&amp;q,&amp;n)&amp;&amp;n!=0){
    max=cnt=0;
    for(i=0;i&lt;n;i++){
        sum[cnt]=tt[0]=tt[1]=tt[2]=flag=0;
        scanf("%d",&amp;m);
        while(m--){
            scanf(" %c:%lf",&amp;tp,&amp;t);
            if(flag)continue;
            tp=tp-'A';
            if(tp&gt;=0&amp;&amp;tp&lt;3){
                tt[tp]+=t;sum[cnt]+=t;
                if((tt[tp]-600.0)&gt;PRE || (sum[cnt]-1000.0)&gt;PRE)flag=1;
            }else flag=1;
        }
        if(flag||sum[cnt]&gt;q)continue;
        cnt++;
    }
    for(i=0;i&lt;cnt;i++)
        for(j=0;j&lt;cnt;j++)
            if(sum[i]&lt;sum[j]){
                t=sum[i];
                sum[i]=sum[j];
                sum[j]=t;
            }
    max=0;
    for(i=0;i&lt;cnt;i++){
        st[i][i]=sum[i];
        for(j=i+1;j&lt;cnt;j++)
            if(st[i][j-1]+sum[j]&lt;=q)st[i][j]=st[i][j-1]+sum[j];
            else st[i][j]=st[i][j-1];
        if(st[i][j-1]&gt;max)max=st[i][j-1];
        if(q-max&lt;PRE)break;
    }
    printf("%.2f\n",max);
}
return 0;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>小结：07年水题也比较多，题目基本都比较基础，除了水题剩下的就都是模板题。</p>



]]></content>
  </entry>
  
</feed>