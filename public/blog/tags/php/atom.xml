<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: PHP | Bill's Blog]]></title>
  <link href="http://ibillxia.github.com/blog/tags/php/atom.xml" rel="self"/>
  <link href="http://ibillxia.github.com/"/>
  <updated>2013-10-22T22:35:17+08:00</updated>
  <id>http://ibillxia.github.com/</id>
  <author>
    <name><![CDATA[Bill Xia]]></name>
    <email><![CDATA[ibillxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP字符串安全过滤全攻略]]></title>
    <link href="http://ibillxia.github.com/blog/2010/09/24/PHP-string-filter-methods-for-safety/"/>
    <updated>2010-09-24T13:28:00+08:00</updated>
    <id>http://ibillxia.github.com/blog/2010/09/24/PHP-string-filter-methods-for-safety</id>
    <content type="html"><![CDATA[<p>php安全过滤是防止注入的第一道防线，不得大意。提到PHP的安全过滤，不得不提的两个东西是set_magic_quotes_runtime 和 magic_quotes_gpc。</p>




<p>set_magic_quotes_runtime() 可以让程序员在代码中动态开启或关闭 magic_quotes_runtime，set_magic_quotes_runtime(1) 表示开启，
set_magic_quotes_runtime(0) 则表示关闭。当set_magic_quotes_runtime(1)时，从数据库或通过fread之类的函数读取的文本，将自动对' "和\自动
加上反斜杠\进行转义，防止溢出。这在对数据库的数据进行转移的时候非常有用。但在一般情况下，应当将其关闭，否则从数据库读取出来的数据单引
号、双引号和反斜杠都会被加上\，导致显示不正常。像Discuz，PHPWind都在公共文件的头部加上一句 set_magic_quotes_runtime(0); 强制关闭 
magic_quotes_runtime 。</p>




<p>magic_quotes_gpc 和 magic_quotes_runtime 的区别在于，magic_quotes_gpc 是对通过GET、POST、COOKIE传递的数据进行转义，一般在数据入库前
要先进行转义，magic_quotes_gpc不能在代码中动态开启或关 闭，需要到php.ini将magic_quotes_gpc设置为on或off，代码中可以用get_magic_quotes_gpc
获取 magic_quotes_gpc的状态。当magic_quotes_gpc为off时，需要手工对数据进行addslashes，代码如下：</p>


<!--more-->


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if (!get_magic_quotes_gpc()) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code> add_slashes($_GET);
</span><span class='line'> add_slashes($_POST);
</span><span class='line'> add_slashes($_COOKIE);
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>function add_slashes($string) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code> if (is_array($string)) {    
</span><span class='line'>     foreach ($string as $key =&gt; $value) {    
</span><span class='line'>         $string[$key] = add_slashes($value);    
</span><span class='line'>     }    
</span><span class='line'> } else {    
</span><span class='line'>     $string = addslashes($string);    
</span><span class='line'> }    
</span><span class='line'> return $string;    
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;br/></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>php防注入函数,字符过滤函数</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//解码
</span><span class='line'>function htmldecode($str)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>if(empty($str)) return;
</span><span class='line'>if($str=="") return $str;
</span><span class='line'>$str=str_replace("sel&amp;#101;ct","select",$str);
</span><span class='line'>$str=str_replace("jo&amp;#105;n","join",$str);
</span><span class='line'>$str=str_replace("un&amp;#105;on","union",$str);
</span><span class='line'>$str=str_replace("wh&amp;#101;re","where",$str);
</span><span class='line'>$str=str_replace("ins&amp;#101;rt","insert",$str);
</span><span class='line'>$str=str_replace("del&amp;#101;te","delete",$str);
</span><span class='line'>$str=str_replace("up&amp;#100;ate","update",$str);
</span><span class='line'>$str=str_replace("lik&amp;#101;","like",$str);
</span><span class='line'>$str=str_replace("dro&amp;#112;","drop",$str);
</span><span class='line'>$str=str_replace("cr&amp;#101;ate","create",$str);
</span><span class='line'>$str=str_replace("mod&amp;#105;fy","modify",$str);
</span><span class='line'>$str=str_replace("ren&amp;#097;me","rename",$str);
</span><span class='line'>$str=str_replace("alt&amp;#101;r","alter",$str);
</span><span class='line'>$str=str_replace("ca&amp;#115;","cast",$str);
</span><span class='line'>$str=str_replace("&amp;amp;","&amp;",$str);
</span><span class='line'>$str=str_replace("&amp;gt;","&gt;",$str);
</span><span class='line'>$str=str_replace("&amp;lt;","&lt;",$str);
</span><span class='line'>$str=str_replace("&amp;nbsp;",chr(32),$str);
</span><span class='line'>$str=str_replace("&amp;nbsp;",chr(9),$str);
</span><span class='line'>//$str=str_replace("&amp;#160;&amp;#160;&amp;#160;&amp;#160;",chr(9),$str);
</span><span class='line'>$str=str_replace("&amp;",chr(34),$str);
</span><span class='line'>$str=str_replace("&amp;#39;",chr(39),$str);
</span><span class='line'>$str=str_replace("&lt;br /&gt;",chr(13),$str);
</span><span class='line'>$str=str_replace("''","'",$str);
</span><span class='line'>return $str;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>//编码
</span><span class='line'>function htmlencode($str)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>if(empty($str)) return;
</span><span class='line'>if($str=="") return $str;
</span><span class='line'>$str=trim($str);
</span><span class='line'>$str=str_replace("&amp;","&amp;amp;",$str);
</span><span class='line'>$str=str_replace("&gt;","&amp;gt;",$str);
</span><span class='line'>$str=str_replace("&lt;","&amp;lt;",$str);
</span><span class='line'>$str=str_replace(chr(32),"&amp;nbsp;",$str);
</span><span class='line'>$str=str_replace(chr(9),"&amp;nbsp;",$str);
</span><span class='line'>//$str=str_replace(chr(9),"&amp;#160;&amp;#160;&amp;#160;&amp;#160;",$str);
</span><span class='line'>$str=str_replace(chr(34),"&amp;",$str);
</span><span class='line'>$str=str_replace(chr(39),"&amp;#39;",$str);
</span><span class='line'>$str=str_replace(chr(13),"&lt;br /&gt;",$str);
</span><span class='line'>$str=str_replace("'","''",$str);
</span><span class='line'>$str=str_replace("select","sel&amp;#101;ct",$str);
</span><span class='line'>$str=str_replace("join","jo&amp;#105;n",$str);
</span><span class='line'>$str=str_replace("union","un&amp;#105;on",$str);
</span><span class='line'>$str=str_replace("where","wh&amp;#101;re",$str);
</span><span class='line'>$str=str_replace("insert","ins&amp;#101;rt",$str);
</span><span class='line'>$str=str_replace("delete","del&amp;#101;te",$str);
</span><span class='line'>$str=str_replace("update","up&amp;#100;ate",$str);
</span><span class='line'>$str=str_replace("like","lik&amp;#101;",$str);
</span><span class='line'>$str=str_replace("drop","dro&amp;#112;",$str);
</span><span class='line'>$str=str_replace("create","cr&amp;#101;ate",$str);
</span><span class='line'>$str=str_replace("modify","mod&amp;#105;fy",$str);
</span><span class='line'>$str=str_replace("rename","ren&amp;#097;me",$str);
</span><span class='line'>$str=str_replace("alter","alt&amp;#101;r",$str);
</span><span class='line'>$str=str_replace("cast","ca&amp;#115;",$str);
</span><span class='line'>return $str;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超好的HTML解析工具PHP Simple HTML DOM Parser]]></title>
    <link href="http://ibillxia.github.com/blog/2010/08/28/a-php-html-parser-PHPSimpleHTMLDOMParser/"/>
    <updated>2010-08-28T20:49:00+08:00</updated>
    <id>http://ibillxia.github.com/blog/2010/08/28/a-php-html-parser-PHPSimpleHTMLDOMParser</id>
    <content type="html"><![CDATA[<p>采用PHP5+ 开发的一个简单的 PHP HTML DOM 分析，支持 invalid HTML 并提供非常简单的方式来操作 HTML 元素。在 HMTL 页面
上查找标签所使用的语法与 jQuery （一个轻量级，实用的 javascript 框架） 相似，从页面中抽取内容只需要一行代码。开源代码：
<a href="http://sourceforge.net/projects/simplehtmldom/">http://sourceforge.net/projects/simplehtmldom/</a> </p>




<p>它具有以下几个特点：</br>
1. 只支援 PHP5 以上. </br>
2. 可以分析不严谨 (invalid) 的 HTML. </br>
3. 支援简单的 CSS Selector. </br>
4. 简单的 DOM 操作. </br>
5. 会维持 HTML 中的原始格式 .</br>
下面是使用手册上举的几个简单的使用示例。</p>


<!--more-->


<p>如何读取 HTML 元素 </p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?
</span><span class='line'>include('html_dom_parser.php');
</span><span class='line'>$dom = file_get_dom('http://www.google.com/');
</span><span class='line'>// 找出所有网页连结
</span><span class='line'>$result = $dom->find('a');
</span><span class='line'>foreach($result as $v) {echo $v->href . '&lt;br>';}
</span><span class='line'>// 找出所有网页图片
</span><span class='line'>$result = $dom->find('img');
</span><span class='line'>foreach($result as $v) {echo $v->src . '&lt;br>';}
</span><span class='line'>// 找出所有网页中所有 id=gbar 的 div 标签
</span><span class='line'>$result = $dom->find('div#gbar');
</span><span class='line'>foreach($result as $v) {echo $v->innertext . '&lt;br>';}
</span><span class='line'>// 找出所有网页中所有 calss=gb1 的 span 标签
</span><span class='line'>$result = $dom->find('span.gb1');
</span><span class='line'>foreach($result as $v) {echo $v->outertext . '&lt;br>';}
</span><span class='line'>// 找出所有网页中所有 align=center 的 'td 标签
</span><span class='line'>$result = $dom->find('td[align=center]');
</span><span class='line'>foreach($result as $v) {echo $v->outertext . '&lt;br>';}
</span><span class='line'>?></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如何修改 HTML 元素 </p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?
</span><span class='line'>include('html_dom_parser.php');
</span><span class='line'>$dom = file_get_dom('http://www.google.com/');
</span><span class='line'>// 移除网页中所有图片
</span><span class='line'>$ret = $dom->find('img');
</span><span class='line'>foreach($ret as $v) {$v->outertext = '';}
</span><span class='line'>// 修改网页中所有 input 标签
</span><span class='line'>$ret = $dom->find('input');
</span><span class='line'>foreach($ret as $v) {$v->outertext = '[INPUT]';}
</span><span class='line'>// 显示修改后的网页
</span><span class='line'>echo $dom->save();
</span><span class='line'>?></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Slashdot网站内容抓取</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Create DOM from URL
</span><span class='line'>$html = file_get_html('http://slashdot.org/');
</span><span class='line'>// Find all article blocks
</span><span class='line'>foreach($html->find('div.article') as $article) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>$item['title']     = $article-&gt;find('div.title', 0)-&gt;plaintext;
</span><span class='line'>$item['intro']    = $article-&gt;find('div.intro', 0)-&gt;plaintext;
</span><span class='line'>$item['details'] = $article-&gt;find('div.details', 0)-&gt;plaintext;
</span><span class='line'>$articles[] = $item;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>print_r($articles);</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP格式化打印数组，调试有用]]></title>
    <link href="http://ibillxia.github.com/blog/2010/08/25/php-print-in-format-very-useful-in-debuging/"/>
    <updated>2010-08-25T10:08:00+08:00</updated>
    <id>http://ibillxia.github.com/blog/2010/08/25/php-print-in-format-very-useful-in-debuging</id>
    <content type="html"><![CDATA[<p>以下是从FleaPHP上挖来的，感谢FleaPHP的开发者们。</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/&lt;em>*
</span><span class='line'>* 输出变量的内容，通常用于调试
</span><span class='line'>*
</span><span class='line'>* @package Core
</span><span class='line'>*
</span><span class='line'>* @param mixed $vars 要输出的变量
</span><span class='line'>* @param string $label
</span><span class='line'>* @param boolean $return
</span><span class='line'>&lt;/em>/
</span><span class='line'>function dump($vars, $label = '', $return = false)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>if (ini_get('html_errors')) {
</span><span class='line'>    $content = "&lt;pre&gt;\n";
</span><span class='line'>    if ($label != '') {
</span><span class='line'>        $content .= "&lt;strong&gt;{$label} :&lt;/strong&gt;\n";
</span><span class='line'>    }
</span><span class='line'>    $content .= htmlspecialchars(print_r($vars, true));
</span><span class='line'>    $content .= "\n&lt;/pre&gt;\n";
</span><span class='line'>} else {
</span><span class='line'>    $content = $label . " :\n" . print_r($vars, true);
</span><span class='line'>}
</span><span class='line'>if ($return) { return $content; }
</span><span class='line'>echo $content;
</span><span class='line'>return null;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->


<p>所以只要在自己的代码脚本所有函数外面，ctrl+c/ctrl+v上面这段代码，就可以有dump()函数格式化打印数组了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP采集利器snoopy应用详解]]></title>
    <link href="http://ibillxia.github.com/blog/2010/08/10/php-connecting-tool-snoopy-introduction-and-application/"/>
    <updated>2010-08-10T19:34:00+08:00</updated>
    <id>http://ibillxia.github.com/blog/2010/08/10/php-connecting-tool-snoopy-introduction-and-application</id>
    <content type="html"><![CDATA[<p>Snoopy是一个php类，用来模拟浏览器的功能，可以获取网页内容，发送表单。Snoopy正确运行需要你的服务器的PHP版本在4以上，
并且支持PCRE（Perl Compatible Regular Expressions），基本的LAMP服务都支持。</p>




<h2>一、Snoopy的一些特点</h2>


<p>1.抓取网页的内容 fetch</br>
2.抓取网页的文本内容 (去除HTML标签) fetchtext</br>
3.抓取网页的链接，表单 fetchlinks fetchform</br>
4.支持代理主机</br>
5.支持基本的用户名/密码验证</br>
6.支持设置user_agent, referer(来路), cookies和header content(头文件)</br>
7.支持浏览器重定向，并能控制重定向深度</br>
8.能把网页中的链接扩展成高质量的url(默认)</br>
9.提交数据并且获取返回值</br>
10.支持跟踪HTML框架</br>
11.支持重定向的时候传递cookies，要求php4以上就可以了，由于本身是php一个类，无需扩支持，服务器不支持curl时候的最好选择</p>


<!--more-->


<h2>二、类方法</h2>


<p>fetch(\$URI) </br>
这是为了抓取网页的内容而使用的方法。\$URI参数是被抓取网页的URL地址。抓取的结果被存储在 \$this->results 中。
如果你正在抓取的是一个框架，Snoopy将会将每个框架追踪后存入数组中，然后存入 \$this->results。</br></br>

fetchtext(\$URI) </br>
本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中的文字内容。</br></br>

fetchform(\$URI) </br>
本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中表单内容(form)。</br></br>

fetchlinks(\$URI) 
本方法类似于fetch()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中链接(link)。 
默认情况下，相对链接将自动补全，转换成完整的URL。</br></br>

submit(\$URI,\$formvars) </br>
本方法向\$URL指定的链接地址发送确认表单。\$formvars是一个存储表单参数的数组。</br></br>

submittext(\$URI,\$formvars) </br>
本方法类似于submit()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回登陆后网页中的文字内容。</br></br>

submitlinks(\$URI) </br>
本方法类似于submit()，唯一不同的就是本方法会去除HTML标签和其他的无关数据，只返回网页中链接(link)。 
默认情况下，相对链接将自动补全，转换成完整的URL。</p>




<h2>三、类属性(缺省值在括号里)</h2>


<p>\$host 连接的主机 </br>
\$port 连接的端口 </br>
\$proxy_host 使用的代理主机，如果有的话 </br>
\$proxy_port 使用的代理主机端口，如果有的话 </br>
\$agent 用户代理伪装 (Snoopy v0.1) </br>
\$referer 来路信息，如果有的话 </br>
\$cookies cookies， 如果有的话 </br>
\$rawheaders 其他的头信息, 如果有的话 </br>
\$maxredirs 最大重定向次数， 0=不允许 (5) </br>
\$offsiteok whether or not to allow redirects off-site. (true) </br>
\$expandlinks 是否将链接都补全为完整地址 (true) </br>
\$user 认证用户名, 如果有的话 </br>
\$pass 认证用户名, 如果有的话 </br>
\$accept http 接受类型 (image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*) </br>
\$error 哪里报错, 如果有的话 </br>
\$response_code 从服务器返回的响应代码 </br>
\$headers 从服务器返回的头信息 </br>
\$maxlength 最长返回数据长度 </br>
\$read_timeout 读取操作超时 (requires PHP 4 Beta 4+) 设置为0为没有超时 </br>
\$timed_out 如果一次读取操作超时了，本属性返回 true (requires PHP 4 Beta 4+) </br>
\$maxframes 允许追踪的框架最大数量 </br>
\$status 抓取的http的状态 </br>
\$temp_dir 网页服务器能够写入的临时文件目录 (/tmp) </br>
\$curl_path cURL binary 的目录, 如果没有cURL binary就设置为 false</p>




<h2>四、以下是demo</h2>


<p>Demo 1：抓取百度首页示例</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?
</span><span class='line'>include "Snoopy.class.php";
</span><span class='line'>$snoopy = new Snoopy;
</span><span class='line'>$snoopy->proxy_host = "www.baidu.com";
</span><span class='line'>$snoopy->proxy_port = "8080";
</span><span class='line'>$snoopy->agent = "(compatible; MSIE 4.01; MSN 2.5; AOL 4.0; Windows 98)";
</span><span class='line'>$snoopy->referer = "http://www.baidu.com/";
</span><span class='line'>$snoopy->cookies["SessionID"] = 238472834723489l;
</span><span class='line'>$snoopy->cookies["favoriteColor"] = "RED";
</span><span class='line'>$snoopy->rawheaders["Pragma"] = "no-cache";
</span><span class='line'>$snoopy->maxredirs = 2;
</span><span class='line'>$snoopy->offsiteok = false;
</span><span class='line'>$snoopy->expandlinks = false;
</span><span class='line'>$snoopy->user = "joe";
</span><span class='line'>$snoopy->pass = "bloe";
</span><span class='line'>if($snoopy->fetchtext("http://www.baidu.com"))
</span><span class='line'>{
</span><span class='line'>echo " &lt;PRE>".htmlspecialchars($snoopy->results)." &lt;/PRE>\n"; &lt;BR>
</span><span class='line'>} &lt;BR>
</span><span class='line'>else &lt;BR>
</span><span class='line'>echo "error fetching document: ".$snoopy->error."\n";
</span><span class='line'>?></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Demo 2: snoopy登录并采集phpchina示例 </p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>//采集phpchina
</span><span class='line'>set_time_limit(0);
</span><span class='line'>require_once("Snoopy.class.php");
</span><span class='line'>$snoopy=new Snoopy();
</span><span class='line'>//登陆论坛
</span><span class='line'>$submit_url = "http://www.phpchina.com/bbs/logging.php?action=login";
</span><span class='line'>$submit_vars["loginmode"] = "normal";
</span><span class='line'>$submit_vars["styleid"] = "1";
</span><span class='line'>$submit_vars["cookietime"] = "315360000";
</span><span class='line'>$submit_vars["loginfield"] = "username";
</span><span class='line'>$submit_vars["username"] = "&lt;strong>&lt;em>"; //你的用户名
</span><span class='line'>$submit_vars["password"] = "&lt;/em>&lt;/strong>**"; //你的密码
</span><span class='line'>$submit_vars["questionid"] = "0";
</span><span class='line'>$submit_vars["answer"] = "";
</span><span class='line'>$submit_vars["loginsubmit"] = "提 交";
</span><span class='line'>$snoopy->submit($submit_url,$submit_vars);&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>if ($snoopy->results)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>//获取连接地址 
</span><span class='line'>$snoopy-&gt;fetchlinks("http://www.phpchina.com/bbs"); 
</span><span class='line'>$url=array(); 
</span><span class='line'>$url=$snoopy-&gt;results; 
</span><span class='line'>//print_r($url); 
</span><span class='line'>foreach ($url as $key=&gt;$value) 
</span><span class='line'>{ 
</span><span class='line'>    //匹配http://www.phpchina.com/bbs/forumdisplay.php?fid=156&amp;sid=VfcqTR地址即论坛板块地址 
</span><span class='line'>    if (!preg_match("/^(http:\/\/www\.phpchina\.com\/bbs\/forumdisplay\.php\?fid=)[0-9]*&amp;sid=[a-zA-Z]{6}/i",$value)) 
</span><span class='line'>    { 
</span><span class='line'>        unset($url[$key]); 
</span><span class='line'>    } 
</span><span class='line'>} 
</span><span class='line'>//print_r($url); 
</span><span class='line'>//获取到板块数组$url，循环访问，此处获取第一个模块第一页的数据 
</span><span class='line'>$i=0; 
</span><span class='line'>foreach ($url as $key=&gt;$value) 
</span><span class='line'>{ 
</span><span class='line'>    if ($i&gt;=1) 
</span><span class='line'>    { 
</span><span class='line'>        //测试限制 
</span><span class='line'>        break; 
</span><span class='line'>    } 
</span><span class='line'>    else 
</span><span class='line'>    { 
</span><span class='line'>        //访问该模块，提取帖子的连接地址，正式访问里需要提取帖子分页的数据，然后根据分页数据提取帖子数据 
</span><span class='line'>        $snoopy=new Snoopy(); 
</span><span class='line'>        $snoopy-&gt;fetchlinks($value); 
</span><span class='line'>        $tie=array(); 
</span><span class='line'>        $tie[$i]=$snoopy-&gt;results; 
</span><span class='line'>        //print_r($tie); 
</span><span class='line'>        //转换数组 
</span><span class='line'>        foreach ($tie[$i] as $key=&gt;$value) 
</span><span class='line'>        { 
</span><span class='line'>            //匹配http://www.phpchina.com/bbs/viewthread.php?tid=68127&amp;amp; extra=page%3D1&amp;amp;page=1&amp;sid=iBLZfK 
</span><span class='line'>            if (!preg_match("/^(http:\/\/www\.phpchina\.com\/bbs\/viewthread\.php\?tid=)[0-9]*&amp;amp;extra=page\%3D1&amp;amp;page=[0-9]*&amp;sid=[a-zA-Z]{6}/i",$value)) 
</span><span class='line'>            { 
</span><span class='line'>                unset($tie[$i][$key]); 
</span><span class='line'>            } 
</span><span class='line'>        } 
</span><span class='line'>        //print_r($tie[$i]); 
</span><span class='line'>        //归类数组，将同一个帖子不同页面的内容放一个数组里 
</span><span class='line'>        $left='';//连接左边公用地址 
</span><span class='line'>        $j=0; 
</span><span class='line'>        $page=array(); 
</span><span class='line'>        foreach ($tie[$i] as $key=&gt;$value) 
</span><span class='line'>        { 
</span><span class='line'>            $left=substr($value,0,52); 
</span><span class='line'>            $m=0; 
</span><span class='line'>            foreach ($tie[$i] as $pkey=&gt;$pvalue) 
</span><span class='line'>            { 
</span><span class='line'>                //重组数组 
</span><span class='line'>                if (substr($pvalue,0,52)==$left) 
</span><span class='line'>                { 
</span><span class='line'>                    $page[$j][$m]=$pvalue; 
</span><span class='line'>                    $m++; 
</span><span class='line'>                } 
</span><span class='line'>            } 
</span><span class='line'>            $j++; 
</span><span class='line'>        } 
</span><span class='line'>        //去除重复项开始 
</span><span class='line'>        //$page=array_unique($page);只能用于一维数组 
</span><span class='line'>        $paget[0]=$page[0]; 
</span><span class='line'>        $nums=count($page); 
</span><span class='line'>        for ($n=1;$n &lt;$nums;$n++) 
</span><span class='line'>        { 
</span><span class='line'>            $paget[$n]=array_diff($page[$n],$page[$n-1]); 
</span><span class='line'>        } 
</span><span class='line'>        //去除多维数组重复值结束 
</span><span class='line'>        //去除数组空值 
</span><span class='line'>        unset($page); 
</span><span class='line'>        $page=array();//重新定义page数组 
</span><span class='line'>        $page=array_filter($paget); 
</span><span class='line'>        //print_r($page); 
</span><span class='line'>        $u=0; 
</span><span class='line'>        $title=array(); 
</span><span class='line'>        $content=array(); 
</span><span class='line'>        $temp=''; 
</span><span class='line'>        $tt=array(); 
</span><span class='line'>        foreach ($page as $key=&gt;$value) 
</span><span class='line'>        { 
</span><span class='line'>            //外围循环，针对一个帖子 
</span><span class='line'>            if (is_array($value)) 
</span><span class='line'>            { 
</span><span class='line'>                foreach ($value as $k1=&gt;$v1) 
</span><span class='line'>                { 
</span><span class='line'>                    //页内循环，针对一个帖子的N页 
</span><span class='line'>                    $snoopy=new Snoopy(); 
</span><span class='line'>                    $snoopy-&gt;fetch($v1); 
</span><span class='line'>                    $temp=$snoopy-&gt;results; 
</span><span class='line'>                    //读取标题 
</span><span class='line'>                    if (!preg_match_all("/ &lt;h2&gt;(.*) &lt;\/h2&gt;/i",$temp,$tt)) 
</span><span class='line'>                    { 
</span><span class='line'>                        echo "no title"; 
</span><span class='line'>                        exit; 
</span><span class='line'>                    } 
</span><span class='line'>                    else 
</span><span class='line'>                    { 
</span><span class='line'>                        $title[$u]=$tt[1][1]; 
</span><span class='line'>                    } 
</span><span class='line'>                    unset($tt); 
</span><span class='line'>                    //读取内容 
</span><span class='line'>                    if (!preg_match_all("/ &lt;div id=\"postmessage_[0-9]{1,8}\" class=\"t_msgfont\"&gt;(.*) &lt;\/div&gt;/i",$temp,$tt)) 
</span><span class='line'>                    { 
</span><span class='line'>                        print_r($tt); 
</span><span class='line'>                        echo "no content1"; 
</span><span class='line'>                        exit; 
</span><span class='line'>                    } 
</span><span class='line'>                    else 
</span><span class='line'>                    { 
</span><span class='line'>                        foreach ($tt[1] as $c=&gt;$c2) 
</span><span class='line'>                        { 
</span><span class='line'>                            $content[$u].=$c2; 
</span><span class='line'>                        } 
</span><span class='line'>                    } 
</span><span class='line'>                } 
</span><span class='line'>            } 
</span><span class='line'>            else 
</span><span class='line'>            { 
</span><span class='line'>                //直接取页内容 
</span><span class='line'>                $snoopy=new Snoopy(); 
</span><span class='line'>                $snoopy-&gt;fetch($value); 
</span><span class='line'>                $temp=$snoopy-&gt;results; 
</span><span class='line'>                //读取标题 
</span><span class='line'>                if (!preg_match_all("/ &lt;h2&gt;(.*) &lt;\/h2&gt;/i",$temp,$tt)) 
</span><span class='line'>                { 
</span><span class='line'>                    echo "no title"; 
</span><span class='line'>                    exit; 
</span><span class='line'>                } 
</span><span class='line'>                else 
</span><span class='line'>                { 
</span><span class='line'>                    $title[$u]=$tt[1][1]; 
</span><span class='line'>                } 
</span><span class='line'>                unset($tt); 
</span><span class='line'>                //读取内容 
</span><span class='line'>                if (!preg_match_all("/ &lt;div id=\"postmessage_[0-9]*\" class=\"t_msgfont\"&gt;(.*) &lt;\/div&gt;/i",$temp,$tt)) 
</span><span class='line'>                { 
</span><span class='line'>                    echo "no content2"; 
</span><span class='line'>                    exit; 
</span><span class='line'>                } 
</span><span class='line'>                else 
</span><span class='line'>                { 
</span><span class='line'>                    foreach ($tt[1] as $c=&gt;$c2) 
</span><span class='line'>                    { 
</span><span class='line'>                        $content[$u].=$c2; 
</span><span class='line'>                    } 
</span><span class='line'>                } 
</span><span class='line'>            } 
</span><span class='line'>            $u++; 
</span><span class='line'>        } 
</span><span class='line'>        print_r($content); 
</span><span class='line'>    } 
</span><span class='line'>    $i++; 
</span><span class='line'>} 
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>else
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo "login failed"; 
</span><span class='line'>exit; 
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>?></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP函数call_user_func和call_user_func_array详解]]></title>
    <link href="http://ibillxia.github.com/blog/2010/08/04/explain-php-function-call_user_func-and-call_user_func_array-in-detail/"/>
    <updated>2010-08-04T21:38:00+08:00</updated>
    <id>http://ibillxia.github.com/blog/2010/08/04/explain-php-function-call_user_func-and-call_user_func_array-in-detail</id>
    <content type="html"><![CDATA[<p>call_user_func函数类似于一种特别的调用函数的方法，使用方法如下：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function a($b,$c)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo $b;
</span><span class='line'>echo $c;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>call_user_func('a', "111","222");
</span><span class='line'>call_user_func('a', "333","444");
</span><span class='line'>//显示 111 222 333 444</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->


<p>调用类内部的方法比较奇怪，居然用的是array，不知道开发者是如何考虑的，当然省去了new，也是满有新意的:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class a {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>function b($c) 
</span><span class='line'>{
</span><span class='line'>    echo $c;
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>call_user_func(array("a", "b"),"111");
</span><span class='line'>//显示 111</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>call_user_func_array函数和call_user_func很相似，只不过是换了一种方式传递了参数，让参数的结构更清晰:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>unction a($b, $c)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo $b;
</span><span class='line'>echo $c;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>call_user_func_array('a', array("111", "222"));
</span><span class='line'>//显示 111 222</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>call_user_func_array函数也可以调用类内部的方法的</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Class ClassA {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>function bc($b, $c) {
</span><span class='line'>    $bc = $b + $c;
</span><span class='line'>    echo $bc;
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>call_user_func_array(array('ClassA','bc'), array("111", "222"));
</span><span class='line'>//显示 333</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>call_user_func函数和call_user_func_array函数都支持引用，这让他们和普通的函数调用更趋于功能一致:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function a(&amp;$b)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>$b++;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>$c = 0;
</span><span class='line'>call_user_func('a', &amp;$c);
</span><span class='line'>echo $c;//显示 1
</span><span class='line'>call_user_func_array('a', array(&amp;$c));
</span><span class='line'>echo $c;//显示 2</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>一个可以用于调试输出的例子：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function debug($var, $val)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo "***DEBUGGING\nVARIABLE: $var\nVALUE:";
</span><span class='line'>if (is_array($val) || is_object($val) || is_resource($val)) {
</span><span class='line'>    print_r($val);
</span><span class='line'>} else {
</span><span class='line'>    echo "\n$val\n";
</span><span class='line'>}
</span><span class='line'>echo "***\n";
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>$c = mysql_connect();
</span><span class='line'>$host = $_SERVER["SERVER_NAME"];&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>call_user_func_array('debug', array("host", $host));
</span><span class='line'>call_user_func_array('debug', array("c", $c));
</span><span class='line'>call_user_func_array('debug', array("&lt;em>POST", $&lt;/em>POST));</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>另外，如果和伪重载结合，还可以这样用：</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function otest1 ($a)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo( '一个参数' );
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>function otest2 ( $a, $b)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo( '二个参数' );
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>function otest3 ( $a ,$b,$c)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>echo( '三个啦' );
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>function otest ()
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>$args = func_get_args();
</span><span class='line'>$num = func_num_args();
</span><span class='line'>call_user_func_array( 'otest'.$num, $args );
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>otest(1,2);  //调用第一个函数，输出：一个参数</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
